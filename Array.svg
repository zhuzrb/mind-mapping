<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2597" height="1464" style="background: rgb(251, 251, 251) none repeat scroll 0% 0%; visibility: visible;" viewBox="0 0 2597 1464"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1703.5,449.5A163,176,0,0,1,1866.5,273.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1937.5,273.5C1952.5,273.5,1952.5,305.5,1967.5,305.5L2515.5,305.5"></path><path id="kity_path_59" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1703.5,449.5A163,38,0,0,1,1866.5,411.5"></path><path id="kity_path_67" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1937.5,411.5C1952.5,411.5,1952.5,386.5,1967.5,386.5L2079.5,386.5"></path><path id="kity_path_75" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2079.5,386.5C2094.5,386.5,2094.5,404.5,2109.5,404.5L2431.5,404.5"></path><path id="kity_path_85" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1937.5,411.5C1952.5,411.5,1952.5,465.5,1967.5,465.5L2067.5,465.5"></path><path id="kity_path_93" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2067.5,465.5C2082.5,465.5,2082.5,474.5,2097.5,474.5L2286.5,474.5"></path><path id="kity_path_102" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1703.5,449.5A163,176,0,0,0,1866.5,625.5"></path><path id="kity_path_110" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1936.5,625.5C1951.5,625.5,1951.5,587.5,1966.5,587.5L2150.5,587.5"></path><path id="kity_path_118" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2150.5,587.5C2165.5,587.5,2165.5,535.5,2180.5,535.5L2438.5,535.5"></path><path id="kity_path_126" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2150.5,587.5C2165.5,587.5,2165.5,587.5,2180.5,587.5L2577.5,587.5"></path><path id="kity_path_134" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2150.5,587.5C2165.5,587.5,2165.5,639.5,2180.5,639.5L2348.5,639.5"></path><path id="kity_path_142" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1936.5,625.5C1951.5,625.5,1951.5,691.5,1966.5,691.5L2247.5,691.5"></path><path id="kity_path_150" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1703.5,449.5A163,366,0,0,0,1540.5,83.5"></path><path id="kity_path_158" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1441.5,83.5C1426.5,83.5,1426.5,45.5,1411.5,45.5L1275.5,45.5"></path><path id="kity_path_166" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1441.5,83.5C1426.5,83.5,1426.5,97.5,1411.5,97.5L1268.5,97.5"></path><path id="kity_path_174" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1441.5,83.5C1426.5,83.5,1426.5,149.5,1411.5,149.5L1284.5,149.5"></path><path id="kity_path_182" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1703.5,449.5A163,226,0,0,0,1540.5,223.5"></path><path id="kity_path_190" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1427.5,223.5C1412.5,223.5,1412.5,211.5,1397.5,211.5L1010.5,211.5"></path><path id="kity_path_198" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1427.5,223.5C1412.5,223.5,1412.5,263.5,1397.5,263.5L1106.5,263.5"></path><path id="kity_path_206" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1703.5,449.5A163,366,0,0,1,1540.5,815.5"></path><path id="kity_path_214" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1469.5,815.5C1454.5,815.5,1454.5,404.5,1439.5,404.5L1337.5,404.5"></path><path id="kity_path_230" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1337.5,404.5C1322.5,404.5,1322.5,352.5,1307.5,352.5L1241.5,352.5"></path><path id="kity_path_238" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1241.5,352.5C1226.5,352.5,1226.5,326.5,1211.5,326.5L731.5,326.5"></path><path id="kity_path_246" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1241.5,352.5C1226.5,352.5,1226.5,378.5,1211.5,378.5L783.5,378.5"></path><path id="kity_path_254" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1337.5,404.5C1322.5,404.5,1322.5,456.5,1307.5,456.5L1229.5,456.5"></path><path id="kity_path_262" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1229.5,456.5C1214.5,456.5,1214.5,430.5,1199.5,430.5L791.5,430.5"></path><path id="kity_path_270" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1229.5,456.5C1214.5,456.5,1214.5,482.5,1199.5,482.5L840.5,482.5"></path><path id="kity_path_278" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1469.5,815.5C1454.5,815.5,1454.5,582.5,1439.5,582.5L1361.5,582.5"></path><path id="kity_path_286" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,582.5C1346.5,582.5,1346.5,534.5,1331.5,534.5L1145.5,534.5"></path><path id="kity_path_294" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,582.5C1346.5,582.5,1346.5,630.5,1331.5,630.5L1271.5,630.5"></path><path id="kity_path_302" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1271.5,630.5C1256.5,630.5,1256.5,586.5,1241.5,586.5L853.5,586.5"></path><path id="kity_path_310" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1271.5,630.5C1256.5,630.5,1256.5,674.5,1241.5,674.5L887.5,674.5"></path><path id="kity_path_320" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1469.5,815.5C1454.5,815.5,1454.5,804.5,1439.5,804.5L1361.5,804.5"></path><path id="kity_path_328" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,804.5C1346.5,804.5,1346.5,726.5,1331.5,726.5L1250.5,726.5"></path><path id="kity_path_336" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1250.5,726.5C1235.5,726.5,1235.5,726.5,1220.5,726.5L614.5,726.5"></path><path id="kity_path_344" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,804.5C1346.5,804.5,1346.5,778.5,1331.5,778.5L1268.5,778.5"></path><path id="kity_path_352" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1268.5,778.5C1253.5,778.5,1253.5,778.5,1238.5,778.5L20.5,778.5"></path><path id="kity_path_360" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,804.5C1346.5,804.5,1346.5,882.5,1331.5,882.5L1261.5,882.5"></path><path id="kity_path_368" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1261.5,882.5C1246.5,882.5,1246.5,830.5,1231.5,830.5L913.5,830.5"></path><path id="kity_path_376" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1261.5,882.5C1246.5,882.5,1246.5,882.5,1231.5,882.5L790.5,882.5"></path><path id="kity_path_384" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1261.5,882.5C1246.5,882.5,1246.5,934.5,1231.5,934.5L833.5,934.5"></path><path id="kity_path_392" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1469.5,815.5C1454.5,815.5,1454.5,1012.5,1439.5,1012.5L1361.5,1012.5"></path><path id="kity_path_400" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,1012.5C1346.5,1012.5,1346.5,986.5,1331.5,986.5L1248.5,986.5"></path><path id="kity_path_408" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1248.5,986.5C1233.5,986.5,1233.5,986.5,1218.5,986.5L516.5,986.5"></path><path id="kity_path_416" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,1012.5C1346.5,1012.5,1346.5,1038.5,1331.5,1038.5L1217.5,1038.5"></path><path id="kity_path_424" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1469.5,815.5C1454.5,815.5,1454.5,1255.5,1439.5,1255.5L1361.5,1255.5"></path><path id="kity_path_432" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,1255.5C1346.5,1255.5,1346.5,1116.5,1331.5,1116.5L1262.5,1116.5"></path><path id="kity_path_440" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1262.5,1116.5C1247.5,1116.5,1247.5,1090.5,1232.5,1090.5L757.5,1090.5"></path><path id="kity_path_448" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1262.5,1116.5C1247.5,1116.5,1247.5,1142.5,1232.5,1142.5L1002.5,1142.5"></path><path id="kity_path_456" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,1255.5C1346.5,1255.5,1346.5,1194.5,1331.5,1194.5L1262.5,1194.5"></path><path id="kity_path_464" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1262.5,1194.5C1247.5,1194.5,1247.5,1194.5,1232.5,1194.5L782.5,1194.5"></path><path id="kity_path_472" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,1255.5C1346.5,1255.5,1346.5,1246.5,1331.5,1246.5L1267.5,1246.5"></path><path id="kity_path_480" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1267.5,1246.5C1252.5,1246.5,1252.5,1246.5,1237.5,1246.5L833.5,1246.5"></path><path id="kity_path_488" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,1255.5C1346.5,1255.5,1346.5,1298.5,1331.5,1298.5L1267.5,1298.5"></path><path id="kity_path_496" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1267.5,1298.5C1252.5,1298.5,1252.5,1298.5,1237.5,1298.5L844.5,1298.5"></path><path id="kity_path_504" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1361.5,1255.5C1346.5,1255.5,1346.5,1394.5,1331.5,1394.5L1250.5,1394.5"></path><path id="kity_path_512" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1250.5,1394.5C1235.5,1394.5,1235.5,1350.5,1220.5,1350.5L852.5,1350.5"></path><path id="kity_path_520" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1250.5,1394.5C1234.5,1394.5,1234.5,1444.5,1218.5,1444.5L915.5,1444.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(115, 161, 191)" d="M1663.5,429.5h80a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-80a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="438.939998626709" x="1682.5">Array</text></g></g><g id="kity_g_14" display="none"><path id="kity_path_15" fill="rgba(0, 92, 153, 0.5)" stroke="none" d="M853.5,756.5h378v15h-378z"></path><path id="kity_path_16" fill="none" stroke="rgb(0, 76, 128)" d="M853.5,756.5L1231.5,756.5" stroke-width="1"></path></g><g id="minder_node2"><g id="node_expander1" style="cursor: pointer;"><path id="kity_path_36" fill="white" stroke="gray" d="M1867.5,273.5A6,6,0,1,1,1855.5,273.5A6,6,0,1,1,1867.5,273.5"></path><path id="kity_path_37" fill="none" stroke="gray" d="M1857,273.5L1866,273.5"></path></g><path id="node_outline2" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1871.5,260.5h63a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-63a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text2" fill="black"><text id="kity_text_33" text-rendering="inherit" font-size="14" dy=".8em" y="264.2599983215332" x="1888.5">特点</text></g></g><g id="minder_node4" opacity="1"><g id="node_expander3" style="cursor: pointer;" display="none"><path id="kity_path_52" fill="white" stroke="gray" d="M1977.5,273.5A6,6,0,1,1,1965.5,273.5A6,6,0,1,1,1977.5,273.5"></path><path id="kity_path_53" fill="none" stroke="gray"></path></g><path id="node_outline4" fill="none" stroke="none" d="M1982.5,244.5h528a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-528a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text4" fill="black"><text id="kity_text_49" text-rendering="inherit" font-size="12" dy=".8em" y="247.5800018310547" x="1987.5">每一项都可以保存任何类型的数据。</text><text id="kity_text_56" text-rendering="inherit" font-size="12" dy=".8em" y="265.5800018310547" x="1987.5">数组的大小是可以动态调整。</text><text id="kity_text_57" text-rendering="inherit" font-size="12" dy=".8em" y="283.5800018310547" x="1987.5">数组的length属性：可读可写，可以通过设置length的值从数组的末尾移除项或向数组中添加新项</text></g></g><g id="minder_node5"><g id="node_expander4" style="cursor: pointer;"><path id="kity_path_64" fill="white" stroke="gray" d="M1867.5,411.5A6,6,0,1,1,1855.5,411.5A6,6,0,1,1,1867.5,411.5"></path><path id="kity_path_65" fill="none" stroke="gray" d="M1857,411.5L1866,411.5"></path></g><path id="node_outline5" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1871.5,398.5h63a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-63a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text5" fill="black"><text id="kity_text_61" text-rendering="inherit" font-size="14" dy=".8em" y="402.2599983215332" x="1888.5">定义</text></g></g><g id="minder_node6"><g id="node_expander5" style="cursor: pointer;"><path id="kity_path_72" fill="white" stroke="gray" d="M1977.5,372.5A6,6,0,1,1,1965.5,372.5A6,6,0,1,1,1977.5,372.5"></path><path id="kity_path_73" fill="none" stroke="gray" d="M1967,372.5L1976,372.5"></path></g><path id="node_outline6" fill="none" stroke="none" d="M1982.5,361.5h92a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-92a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text6" fill="black"><text id="kity_text_69" text-rendering="inherit" font-size="12" dy=".8em" y="364.5800018310547" x="1987.5">1.通过构造函数</text></g></g><g id="minder_node7"><g id="node_expander6" style="cursor: pointer;" display="none"><path id="kity_path_80" fill="white" stroke="gray" d="M2119.5,372.5A6,6,0,1,1,2107.5,372.5A6,6,0,1,1,2119.5,372.5"></path><path id="kity_path_81" fill="none" stroke="gray"></path></g><path id="node_outline7" fill="none" stroke="none" d="M2124.5,343.5h302a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-302a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text7" fill="black"><text id="kity_text_77" text-rendering="inherit" font-size="12" dy=".8em" y="346.5800018310547" x="2129.5">var arr = new Array();</text><text id="kity_text_82" text-rendering="inherit" font-size="12" dy=".8em" y="364.5800018310547" x="2129.5">var arr = new Array(20);&#xa0; // 预先指定数组的大小</text><text id="kity_text_83" text-rendering="inherit" font-size="12" dy=".8em" y="382.5800018310547" x="2129.5">var arr = new Array("hi","hello","world"); //传入参数</text></g></g><g id="minder_node8"><g id="node_expander7" style="cursor: pointer;"><path id="kity_path_90" fill="white" stroke="gray" d="M1977.5,451.5A6,6,0,1,1,1965.5,451.5A6,6,0,1,1,1977.5,451.5"></path><path id="kity_path_91" fill="none" stroke="gray" d="M1967,451.5L1976,451.5"></path></g><path id="node_outline8" fill="none" stroke="none" d="M1982.5,440.5h80a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-80a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text8" fill="black"><text id="kity_text_87" text-rendering="inherit" font-size="12" dy=".8em" y="443.5800018310547" x="1987.5">2.数组字面量</text></g></g><g id="minder_node9"><g id="node_expander8" style="cursor: pointer;" display="none"><path id="kity_path_98" fill="white" stroke="gray" d="M2107.5,451.5A6,6,0,1,1,2095.5,451.5A6,6,0,1,1,2107.5,451.5"></path><path id="kity_path_99" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M2112.5,431.5h169a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-169a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text9" fill="black"><text id="kity_text_95" text-rendering="inherit" font-size="12" dy=".8em" y="434.5800018310547" x="2117.5">var arr = [];</text><text id="kity_text_100" text-rendering="inherit" font-size="12" dy=".8em" y="452.5800018310547" x="2117.5">var arr = ['hi','hello','world'];</text></g></g><g id="minder_node10" opacity="1"><g id="node_expander9" style="cursor: pointer;"><path id="kity_path_107" fill="white" stroke="gray" d="M1867.5,625.5A6,6,0,1,1,1855.5,625.5A6,6,0,1,1,1867.5,625.5"></path><path id="kity_path_108" fill="none" stroke="gray" d="M1857,625.5L1866,625.5"></path></g><path id="node_outline10" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1871.5,612.5h62a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-62a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text10" fill="black"><text id="kity_text_104" text-rendering="inherit" font-size="14" dy=".8em" y="616.2599983215332" x="1888.5">访问</text></g></g><g id="minder_node11"><g id="node_expander10" style="cursor: pointer;"><path id="kity_path_115" fill="white" stroke="gray" d="M1976.5,573.5A6,6,0,1,1,1964.5,573.5A6,6,0,1,1,1976.5,573.5"></path><path id="kity_path_116" fill="none" stroke="gray" d="M1966,573.5L1975,573.5"></path></g><path id="node_outline11" fill="none" stroke="none" d="M1981.5,562.5h164a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-164a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text11" fill="black"><text id="kity_text_112" text-rendering="inherit" font-size="12" dy=".8em" y="565.5800018310547" x="1986.5">1.数组元素，使用中括号访问</text></g></g><g id="minder_node12"><g id="node_expander11" style="cursor: pointer;" display="none"><path id="kity_path_123" fill="white" stroke="gray" d="M2190.5,521.5A6,6,0,1,1,2178.5,521.5A6,6,0,1,1,2190.5,521.5"></path><path id="kity_path_124" fill="none" stroke="gray"></path></g><path id="node_outline12" fill="none" stroke="none" d="M2195.5,510.5h238a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-238a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text12" fill="black"><text id="kity_text_120" text-rendering="inherit" font-size="12" dy=".8em" y="513.5800018310547" x="2200.5">如果索引小于数组的长度，返回对应项的值</text></g></g><g id="minder_node13"><g id="node_expander12" style="cursor: pointer;" display="none"><path id="kity_path_131" fill="white" stroke="gray" d="M2190.5,573.5A6,6,0,1,1,2178.5,573.5A6,6,0,1,1,2190.5,573.5"></path><path id="kity_path_132" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M2195.5,562.5h377a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-377a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text13" fill="black"><text id="kity_text_128" text-rendering="inherit" font-size="12" dy=".8em" y="565.5800018310547" x="2200.5">如果索引大于数组的长度且赋值，数组自动增加到该索引值加1的长度</text></g></g><g id="minder_node14"><g id="node_expander13" style="cursor: pointer;" display="none"><path id="kity_path_139" fill="white" stroke="gray" d="M2190.5,625.5A6,6,0,1,1,2178.5,625.5A6,6,0,1,1,2190.5,625.5"></path><path id="kity_path_140" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="none" stroke="none" d="M2195.5,614.5h148a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-148a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text14" fill="black"><text id="kity_text_136" text-rendering="inherit" font-size="12" dy=".8em" y="617.5800018310547" x="2200.5">索引小于0返回undefined</text></g></g><g id="minder_node15"><g id="node_expander14" style="cursor: pointer;" display="none"><path id="kity_path_147" fill="white" stroke="gray" d="M1976.5,677.5A6,6,0,1,1,1964.5,677.5A6,6,0,1,1,1976.5,677.5"></path><path id="kity_path_148" fill="none" stroke="gray"></path></g><path id="node_outline15" fill="none" stroke="none" d="M1981.5,666.5h261a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-261a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text15" fill="black"><text id="kity_text_144" text-rendering="inherit" font-size="12" dy=".8em" y="669.5800018310547" x="1986.5">2.数组长度，通过length属性来访问数组的长度</text></g></g><g id="minder_node16"><g id="node_expander15" style="cursor: pointer;"><path id="kity_path_155" fill="white" stroke="gray" d="M1551.5,83.5A6,6,0,1,1,1539.5,83.5A6,6,0,1,1,1551.5,83.5"></path><path id="kity_path_156" fill="none" stroke="gray" d="M1541,83.5L1550,83.5"></path></g><path id="node_outline16" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1444.5,70.5h91a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-91a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text16" fill="black"><text id="kity_text_152" text-rendering="inherit" font-size="14" dy=".8em" y="74.2599983215332" x="1461.5">数组检测</text></g></g><g id="minder_node17"><g id="node_expander16" style="cursor: pointer;" display="none"><path id="kity_path_163" fill="white" stroke="gray" d="M1413.5,31.5A6,6,0,1,1,1401.5,31.5A6,6,0,1,1,1413.5,31.5"></path><path id="kity_path_164" fill="none" stroke="gray"></path></g><path id="node_outline17" fill="none" stroke="none" d="M1280.5,20.5h116a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-116a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text17" fill="black"><text id="kity_text_160" text-rendering="inherit" font-size="12" dy=".8em" y="23.580001831054688" x="1285.5">typeof(arr)&#xa0; Object</text></g></g><g id="minder_node18"><g id="node_expander17" style="cursor: pointer;" display="none"><path id="kity_path_171" fill="white" stroke="gray" d="M1413.5,83.5A6,6,0,1,1,1401.5,83.5A6,6,0,1,1,1413.5,83.5"></path><path id="kity_path_172" fill="none" stroke="gray"></path></g><path id="node_outline18" fill="none" stroke="none" d="M1273.5,72.5h123a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-123a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text18" fill="black"><text id="kity_text_168" text-rendering="inherit" font-size="12" dy=".8em" y="75.58000183105469" x="1278.5">arr instanceof Array </text></g></g><g id="minder_node19"><g id="node_expander18" style="cursor: pointer;" display="none"><path id="kity_path_179" fill="white" stroke="gray" d="M1413.5,135.5A6,6,0,1,1,1401.5,135.5A6,6,0,1,1,1413.5,135.5"></path><path id="kity_path_180" fill="none" stroke="gray"></path></g><path id="node_outline19" fill="none" stroke="none" d="M1289.5,124.5h107a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-107a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text19" fill="black"><text id="kity_text_176" text-rendering="inherit" font-size="12" dy=".8em" y="127.58000183105469" x="1294.5">Array.isArray(arr)</text></g></g><g id="minder_node20"><g id="node_expander19" style="cursor: pointer;"><path id="kity_path_187" fill="white" stroke="gray" d="M1551.5,223.5A6,6,0,1,1,1539.5,223.5A6,6,0,1,1,1551.5,223.5"></path><path id="kity_path_188" fill="none" stroke="gray" d="M1541,223.5L1550,223.5"></path></g><path id="node_outline20" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1430.5,210.5h105a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-105a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text20" fill="black"><text id="kity_text_184" text-rendering="inherit" font-size="14" dy=".8em" y="214.2599983215332" x="1447.5">数组序列化</text></g></g><g id="minder_node21"><g id="node_expander20" style="cursor: pointer;" display="none"><path id="kity_path_195" fill="white" stroke="gray" d="M1399.5,197.5A6,6,0,1,1,1387.5,197.5A6,6,0,1,1,1399.5,197.5"></path><path id="kity_path_196" fill="none" stroke="gray"></path></g><path id="node_outline21" fill="none" stroke="none" d="M1015.5,186.5h367a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-367a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text21" fill="black"><text id="kity_text_192" text-rendering="inherit" font-size="12" dy=".8em" y="189.5800018310547" x="1020.5">toString()&#xa0;&#xa0; &#xa0;在默认情况下都会以逗号分隔字符串的形式返回数组项</text></g></g><g id="minder_node22"><g id="node_expander21" style="cursor: pointer;" display="none"><path id="kity_path_203" fill="white" stroke="gray" d="M1399.5,249.5A6,6,0,1,1,1387.5,249.5A6,6,0,1,1,1399.5,249.5"></path><path id="kity_path_204" fill="none" stroke="gray"></path></g><path id="node_outline22" fill="none" stroke="none" d="M1111.5,238.5h271a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-271a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text22" fill="black"><text id="kity_text_200" text-rendering="inherit" font-size="12" dy=".8em" y="241.5800018310547" x="1116.5">join();&#xa0;&#xa0; &#xa0;使用指定的字符串用来分隔数组字符串&#xa0;&#xa0;&#xa0; </text></g></g><g id="minder_node23"><g id="node_expander22" style="cursor: pointer;"><path id="kity_path_211" fill="white" stroke="gray" d="M1551.5,815.5A6,6,0,1,1,1539.5,815.5A6,6,0,1,1,1551.5,815.5"></path><path id="kity_path_212" fill="none" stroke="gray" d="M1541,815.5L1550,815.5"></path></g><path id="node_outline23" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1472.5,802.5h63a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-63a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text23" fill="black"><text id="kity_text_208" text-rendering="inherit" font-size="14" dy=".8em" y="806.2599983215332" x="1489.5">方法</text></g></g><g id="minder_node24"><g id="node_expander23" style="cursor: pointer;"><path id="kity_path_219" fill="white" stroke="gray" d="M1441.5,390.5A6,6,0,1,1,1429.5,390.5A6,6,0,1,1,1441.5,390.5"></path><path id="kity_path_220" fill="none" stroke="gray" d="M1431,390.5L1440,390.5"></path></g><path id="node_outline24" fill="none" stroke="none" d="M1342.5,379.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text24" fill="black"><text id="kity_text_216" text-rendering="inherit" font-size="12" dy=".8em" y="382.5800018310547" x="1347.5">栈、队列方法</text></g></g><g id="minder_node26"><g id="node_expander25" style="cursor: pointer;"><path id="kity_path_235" fill="white" stroke="gray" d="M1309.5,338.5A6,6,0,1,1,1297.5,338.5A6,6,0,1,1,1309.5,338.5"></path><path id="kity_path_236" fill="none" stroke="gray" d="M1299,338.5L1308,338.5"></path></g><path id="node_outline26" fill="none" stroke="none" d="M1246.5,327.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text26" fill="black"><text id="kity_text_232" text-rendering="inherit" font-size="12" dy=".8em" y="330.5800018310547" x="1251.5">栈方法</text></g></g><g id="minder_node27"><g id="node_expander26" style="cursor: pointer;" display="none"><path id="kity_path_243" fill="white" stroke="gray" d="M1213.5,312.5A6,6,0,1,1,1201.5,312.5A6,6,0,1,1,1213.5,312.5"></path><path id="kity_path_244" fill="none" stroke="gray"></path></g><path id="node_outline27" fill="none" stroke="none" d="M736.5,301.5h460a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-460a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text27" fill="black"><text id="kity_text_240" text-rendering="inherit" font-size="12" dy=".8em" y="304.5800018310547" x="741.5">push() &#xa0;&#xa0; &#xa0;可接受任意类型的参数，将它们逐个添加到数组的末尾，并返回数组的长度</text></g></g><g id="minder_node28"><g id="node_expander27" style="cursor: pointer;" display="none"><path id="kity_path_251" fill="white" stroke="gray" d="M1213.5,364.5A6,6,0,1,1,1201.5,364.5A6,6,0,1,1,1213.5,364.5"></path><path id="kity_path_252" fill="none" stroke="gray"></path></g><path id="node_outline28" fill="none" stroke="none" d="M788.5,353.5h408a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-408a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text28" fill="black"><text id="kity_text_248" text-rendering="inherit" font-size="12" dy=".8em" y="356.5800018310547" x="793.5">pop()&#xa0;&#xa0; &#xa0; 从数组的末尾移除最后一项，减少数组的length值，返回移除的项</text></g></g><g id="minder_node29"><g id="node_expander28" style="cursor: pointer;"><path id="kity_path_259" fill="white" stroke="gray" d="M1309.5,442.5A6,6,0,1,1,1297.5,442.5A6,6,0,1,1,1309.5,442.5"></path><path id="kity_path_260" fill="none" stroke="gray" d="M1299,442.5L1308,442.5"></path></g><path id="node_outline29" fill="none" stroke="none" d="M1234.5,431.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text29" fill="black"><text id="kity_text_256" text-rendering="inherit" font-size="12" dy=".8em" y="434.5800018310547" x="1239.5">队列方法</text></g></g><g id="minder_node30"><g id="node_expander29" style="cursor: pointer;" display="none"><path id="kity_path_267" fill="white" stroke="gray" d="M1201.5,416.5A6,6,0,1,1,1189.5,416.5A6,6,0,1,1,1201.5,416.5"></path><path id="kity_path_268" fill="none" stroke="gray"></path></g><path id="node_outline30" fill="none" stroke="none" d="M796.5,405.5h388a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-388a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text30" fill="black"><text id="kity_text_264" text-rendering="inherit" font-size="12" dy=".8em" y="408.5800018310547" x="801.5">shift() &#xa0;&#xa0;&#xa0; &#xa0;移除数组中的第一个项同时将数组的长度减一，返回移除的项</text></g></g><g id="minder_node31"><g id="node_expander30" style="cursor: pointer;" display="none"><path id="kity_path_275" fill="white" stroke="gray" d="M1201.5,468.5A6,6,0,1,1,1189.5,468.5A6,6,0,1,1,1201.5,468.5"></path><path id="kity_path_276" fill="none" stroke="gray"></path></g><path id="node_outline31" fill="none" stroke="none" d="M845.5,457.5h339a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-339a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text31" fill="black"><text id="kity_text_272" text-rendering="inherit" font-size="12" dy=".8em" y="460.5800018310547" x="850.5">unshift() &#xa0;&#xa0; &#xa0;在数组的前端添加任意个项，并返回新数组的长度</text></g></g><g id="minder_node32"><g id="node_expander31" style="cursor: pointer;"><path id="kity_path_283" fill="white" stroke="gray" d="M1441.5,568.5A6,6,0,1,1,1429.5,568.5A6,6,0,1,1,1441.5,568.5"></path><path id="kity_path_284" fill="none" stroke="gray" d="M1431,568.5L1440,568.5"></path></g><path id="node_outline32" fill="none" stroke="none" d="M1366.5,557.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text32" fill="black"><text id="kity_text_280" text-rendering="inherit" font-size="12" dy=".8em" y="560.5800018310547" x="1371.5">排序方法</text></g></g><g id="minder_node33"><g id="node_expander32" style="cursor: pointer;" display="none"><path id="kity_path_291" fill="white" stroke="gray" d="M1333.5,520.5A6,6,0,1,1,1321.5,520.5A6,6,0,1,1,1333.5,520.5"></path><path id="kity_path_292" fill="none" stroke="gray"></path></g><path id="node_outline33" fill="none" stroke="none" d="M1150.5,509.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text33" fill="black"><text id="kity_text_288" text-rendering="inherit" font-size="12" dy=".8em" y="512.5800018310547" x="1155.5">reserve()反转数组项的顺序&#xa0;&#xa0;&#xa0; </text></g></g><g id="minder_node34"><g id="node_expander33" style="cursor: pointer;"><path id="kity_path_299" fill="white" stroke="gray" d="M1333.5,616.5A6,6,0,1,1,1321.5,616.5A6,6,0,1,1,1333.5,616.5"></path><path id="kity_path_300" fill="none" stroke="gray" d="M1323,616.5L1332,616.5"></path></g><path id="node_outline34" fill="none" stroke="none" d="M1276.5,605.5h40a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-40a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text34" fill="black"><text id="kity_text_296" text-rendering="inherit" font-size="12" dy=".8em" y="608.5800018310547" x="1281.5">sort()</text></g></g><g id="minder_node35"><g id="node_expander34" style="cursor: pointer;" display="none"><path id="kity_path_307" fill="white" stroke="gray" d="M1243.5,572.5A6,6,0,1,1,1231.5,572.5A6,6,0,1,1,1243.5,572.5"></path><path id="kity_path_308" fill="none" stroke="gray"></path></g><path id="node_outline35" fill="none" stroke="none" d="M858.5,561.5h368a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-368a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text35" fill="black"><text id="kity_text_304" text-rendering="inherit" font-size="12" dy=".8em" y="564.5800018310547" x="863.5">该方法会调用每个数组项的toString() 方法，然后按照字符序列排序</text></g></g><g id="minder_node36" opacity="1"><g id="node_expander35" style="cursor: pointer;" display="none"><path id="kity_path_315" fill="white" stroke="gray" d="M1243.5,642.5A6,6,0,1,1,1231.5,642.5A6,6,0,1,1,1243.5,642.5"></path><path id="kity_path_316" fill="none" stroke="gray"></path></g><path id="node_outline36" fill="none" stroke="none" d="M892.5,613.5h334a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-334a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text36" fill="black"><text id="kity_text_312" text-rendering="inherit" font-size="12" dy=".8em" y="616.5800018310547" x="897.5">该方法可以接受一个比较函数作为参数，比较函数有两个参数</text><text id="kity_text_317" text-rendering="inherit" font-size="12" dy=".8em" y="634.5800018310547" x="897.5">如果第一个参数位于第二个参数之前，返回负数</text><text id="kity_text_318" text-rendering="inherit" font-size="12" dy=".8em" y="652.5800018310547" x="897.5">如果第一个参数位于第二个参数之后，返回正数 </text></g></g><g id="minder_node37"><g id="node_expander36" style="cursor: pointer;"><path id="kity_path_325" fill="white" stroke="gray" d="M1441.5,790.5A6,6,0,1,1,1429.5,790.5A6,6,0,1,1,1441.5,790.5"></path><path id="kity_path_326" fill="none" stroke="gray" d="M1431,790.5L1440,790.5"></path></g><path id="node_outline37" fill="none" stroke="none" d="M1366.5,779.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text37" fill="black"><text id="kity_text_322" text-rendering="inherit" font-size="12" dy=".8em" y="782.5800018310547" x="1371.5">截取方法</text></g></g><g id="minder_node38"><g id="node_expander37" style="cursor: pointer;"><path id="kity_path_333" fill="white" stroke="gray" d="M1333.5,712.5A6,6,0,1,1,1321.5,712.5A6,6,0,1,1,1333.5,712.5"></path><path id="kity_path_334" fill="none" stroke="gray" d="M1323,712.5L1332,712.5"></path></g><path id="node_outline38" fill="none" stroke="none" d="M1255.5,701.5h61a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-61a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text38" fill="black"><text id="kity_text_330" text-rendering="inherit" font-size="12" dy=".8em" y="704.5800018310547" x="1260.5">contact()</text></g></g><g id="minder_node39"><g id="node_expander38" style="cursor: pointer;" display="none"><path id="kity_path_341" fill="white" stroke="gray" d="M1222.5,712.5A6,6,0,1,1,1210.5,712.5A6,6,0,1,1,1222.5,712.5"></path><path id="kity_path_342" fill="none" stroke="gray"></path></g><path id="node_outline39" fill="none" stroke="none" d="M619.5,701.5h586a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-586a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text39" fill="black"><text id="kity_text_338" text-rendering="inherit" font-size="12" dy=".8em" y="704.5800018310547" x="624.5">数组拼接，先创建当前数组的一个副本，然后将接收到的参数添加到这个副本的末尾，返副本，不改变原数组</text></g></g><g id="minder_node40"><g id="node_expander39" style="cursor: pointer;"><path id="kity_path_349" fill="white" stroke="gray" d="M1333.5,764.5A6,6,0,1,1,1321.5,764.5A6,6,0,1,1,1333.5,764.5"></path><path id="kity_path_350" fill="none" stroke="gray" d="M1323,764.5L1332,764.5"></path></g><path id="node_outline40" fill="none" stroke="none" d="M1273.5,753.5h43a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-43a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text40" fill="black"><text id="kity_text_346" text-rendering="inherit" font-size="12" dy=".8em" y="756.5800018310547" x="1278.5">slice()</text></g></g><g id="minder_node41"><g id="node_expander40" style="cursor: pointer;" display="none"><path id="kity_path_357" fill="white" stroke="gray" d="M1240.5,764.5A6,6,0,1,1,1228.5,764.5A6,6,0,1,1,1240.5,764.5"></path><path id="kity_path_358" fill="none" stroke="gray"></path></g><path id="node_outline41" fill="none" stroke="none" d="M25.5,753.5h1198a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-1198a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text41" fill="black"><text id="kity_text_354" text-rendering="inherit" font-size="12" dy=".8em" y="756.5800018310547" x="30.5">数组切割，可接受一个或者两个参数（返回项的起始位置，结束位置）当接受一个参数，从该参数指定的位置开始，到当前数组末尾的所有项。当接受两个参数，起始到结束之间的项，但是不包含结束位置的项。不改变原数组</text></g></g><g id="minder_node42"><g id="node_expander41" style="cursor: pointer;"><path id="kity_path_365" fill="white" stroke="gray" d="M1333.5,868.5A6,6,0,1,1,1321.5,868.5A6,6,0,1,1,1333.5,868.5"></path><path id="kity_path_366" fill="none" stroke="gray" d="M1323,868.5L1332,868.5"></path></g><path id="node_outline42" fill="none" stroke="none" d="M1266.5,857.5h50a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-50a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text42" fill="black"><text id="kity_text_362" text-rendering="inherit" font-size="12" dy=".8em" y="860.5800018310547" x="1271.5">splice()</text></g></g><g id="minder_node43"><g id="node_expander42" style="cursor: pointer;" display="none"><path id="kity_path_373" fill="white" stroke="gray" d="M1233.5,816.5A6,6,0,1,1,1221.5,816.5A6,6,0,1,1,1233.5,816.5"></path><path id="kity_path_374" fill="none" stroke="gray"></path></g><path id="node_outline43" fill="none" stroke="none" d="M918.5,805.5h298a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-298a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text43" fill="black"><text id="kity_text_370" text-rendering="inherit" font-size="12" dy=".8em" y="808.5800018310547" x="923.5">删除：指定两个参数(删除的起始位置，要删除的项数)&#xa0; </text></g></g><g id="minder_node44"><g id="node_expander43" style="cursor: pointer;" display="none"><path id="kity_path_381" fill="white" stroke="gray" d="M1233.5,868.5A6,6,0,1,1,1221.5,868.5A6,6,0,1,1,1233.5,868.5"></path><path id="kity_path_382" fill="none" stroke="gray"></path></g><path id="node_outline44" fill="none" stroke="none" d="M795.5,857.5h421a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-421a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text44" fill="black"><text id="kity_text_378" text-rendering="inherit" font-size="12" dy=".8em" y="860.5800018310547" x="800.5">插入：指定三个参数(起始位置，0（删除的项数），要插入的项任意数量的项)</text></g></g><g id="minder_node45"><g id="node_expander44" style="cursor: pointer;" display="none"><path id="kity_path_389" fill="white" stroke="gray" d="M1233.5,920.5A6,6,0,1,1,1221.5,920.5A6,6,0,1,1,1233.5,920.5"></path><path id="kity_path_390" fill="none" stroke="gray"></path></g><path id="node_outline45" fill="none" stroke="none" d="M838.5,909.5h378a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-378a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text45" fill="black"><text id="kity_text_386" text-rendering="inherit" font-size="12" dy=".8em" y="912.5800018310547" x="843.5">替换：指定三个参数(起始位置，要删除的项，要插入的任意数量的项)</text></g></g><g id="minder_node46"><g id="node_expander45" style="cursor: pointer;"><path id="kity_path_397" fill="white" stroke="gray" d="M1441.5,998.5A6,6,0,1,1,1429.5,998.5A6,6,0,1,1,1441.5,998.5"></path><path id="kity_path_398" fill="none" stroke="gray" d="M1431,998.5L1440,998.5"></path></g><path id="node_outline46" fill="none" stroke="none" d="M1366.5,987.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text46" fill="black"><text id="kity_text_394" text-rendering="inherit" font-size="12" dy=".8em" y="990.5800018310547" x="1371.5">索引方法</text></g></g><g id="minder_node47"><g id="node_expander46" style="cursor: pointer;"><path id="kity_path_405" fill="white" stroke="gray" d="M1333.5,972.5A6,6,0,1,1,1321.5,972.5A6,6,0,1,1,1333.5,972.5"></path><path id="kity_path_406" fill="none" stroke="gray" d="M1323,972.5L1332,972.5"></path></g><path id="node_outline47" fill="none" stroke="none" d="M1253.5,961.5h63a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-63a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text47" fill="black"><text id="kity_text_402" text-rendering="inherit" font-size="12" dy=".8em" y="964.5800018310547" x="1258.5">indexOf()</text></g></g><g id="minder_node48"><g id="node_expander47" style="cursor: pointer;" display="none"><path id="kity_path_413" fill="white" stroke="gray" d="M1220.5,972.5A6,6,0,1,1,1208.5,972.5A6,6,0,1,1,1220.5,972.5"></path><path id="kity_path_414" fill="none" stroke="gray"></path></g><path id="node_outline48" fill="none" stroke="none" d="M521.5,961.5h682a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-682a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text48" fill="black"><text id="kity_text_410" text-rendering="inherit" font-size="12" dy=".8em" y="964.5800018310547" x="526.5">从数组开头向后查找，使用全等操作符，找不到该元素返回-1。第一个参数为要查找的项，第二个参数（可选）为索引开始位置</text></g></g><g id="minder_node49"><g id="node_expander48" style="cursor: pointer;" display="none"><path id="kity_path_421" fill="white" stroke="gray" d="M1333.5,1024.5A6,6,0,1,1,1321.5,1024.5A6,6,0,1,1,1333.5,1024.5"></path><path id="kity_path_422" fill="none" stroke="gray"></path></g><path id="node_outline49" fill="none" stroke="none" d="M1222.5,1013.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text49" fill="black"><text id="kity_text_418" text-rendering="inherit" font-size="12" dy=".8em" y="1016.5800018310547" x="1227.5">&#xa0;lastIndexOf() &#xa0;</text></g></g><g id="minder_node50"><g id="node_expander49" style="cursor: pointer;"><path id="kity_path_429" fill="white" stroke="gray" d="M1441.5,1241.5A6,6,0,1,1,1429.5,1241.5A6,6,0,1,1,1441.5,1241.5"></path><path id="kity_path_430" fill="none" stroke="gray" d="M1431,1241.5L1440,1241.5"></path></g><path id="node_outline50" fill="none" stroke="none" d="M1366.5,1230.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text50" fill="black"><text id="kity_text_426" text-rendering="inherit" font-size="12" dy=".8em" y="1233.5800018310547" x="1371.5">迭代方法</text></g></g><g id="minder_node51"><g id="node_expander50" style="cursor: pointer;"><path id="kity_path_437" fill="white" stroke="gray" d="M1333.5,1102.5A6,6,0,1,1,1321.5,1102.5A6,6,0,1,1,1333.5,1102.5"></path><path id="kity_path_438" fill="none" stroke="gray" d="M1323,1102.5L1332,1102.5"></path></g><path id="node_outline51" fill="none" stroke="none" d="M1267.5,1091.5h49a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text51" fill="black"><text id="kity_text_434" text-rendering="inherit" font-size="12" dy=".8em" y="1094.5800018310547" x="1272.5">every()</text></g></g><g id="minder_node52"><g id="node_expander51" style="cursor: pointer;" display="none"><path id="kity_path_445" fill="white" stroke="gray" d="M1234.5,1076.5A6,6,0,1,1,1222.5,1076.5A6,6,0,1,1,1234.5,1076.5"></path><path id="kity_path_446" fill="none" stroke="gray"></path></g><path id="node_outline52" fill="none" stroke="none" d="M762.5,1065.5h455a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-455a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text52" fill="black"><text id="kity_text_442" text-rendering="inherit" font-size="12" dy=".8em" y="1068.5800018310547" x="767.5">对数组中的每一运行给定的函数，如果该函数对每一项都返回true,则该函数返回true</text></g></g><g id="minder_node53"><g id="node_expander52" style="cursor: pointer;" display="none"><path id="kity_path_453" fill="white" stroke="gray" d="M1234.5,1128.5A6,6,0,1,1,1222.5,1128.5A6,6,0,1,1,1234.5,1128.5"></path><path id="kity_path_454" fill="none" stroke="gray"></path></g><path id="node_outline53" fill="none" stroke="none" d="M1007.5,1117.5h210a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-210a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text53" fill="black"><text id="kity_text_450" text-rendering="inherit" font-size="12" dy=".8em" y="1120.5800018310547" x="1012.5">function(item,index,target){return }</text></g></g><g id="minder_node54"><g id="node_expander53" style="cursor: pointer;"><path id="kity_path_461" fill="white" stroke="gray" d="M1333.5,1180.5A6,6,0,1,1,1321.5,1180.5A6,6,0,1,1,1333.5,1180.5"></path><path id="kity_path_462" fill="none" stroke="gray" d="M1323,1180.5L1332,1180.5"></path></g><path id="node_outline54" fill="none" stroke="none" d="M1267.5,1169.5h49a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-49a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text54" fill="black"><text id="kity_text_458" text-rendering="inherit" font-size="12" dy=".8em" y="1172.5800018310547" x="1272.5">some()</text></g></g><g id="minder_node55"><g id="node_expander54" style="cursor: pointer;" display="none"><path id="kity_path_469" fill="white" stroke="gray" d="M1234.5,1180.5A6,6,0,1,1,1222.5,1180.5A6,6,0,1,1,1234.5,1180.5"></path><path id="kity_path_470" fill="none" stroke="gray"></path></g><path id="node_outline55" fill="none" stroke="none" d="M787.5,1169.5h430a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-430a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text55" fill="black"><text id="kity_text_466" text-rendering="inherit" font-size="12" dy=".8em" y="1172.5800018310547" x="792.5">对数组中的每一运行给定的函数，如果该函数对任一项都返回true,则返回true&#xa0;&#xa0;&#xa0; </text></g></g><g id="minder_node56"><g id="node_expander55" style="cursor: pointer;"><path id="kity_path_477" fill="white" stroke="gray" d="M1333.5,1232.5A6,6,0,1,1,1321.5,1232.5A6,6,0,1,1,1333.5,1232.5"></path><path id="kity_path_478" fill="none" stroke="gray" d="M1323,1232.5L1332,1232.5"></path></g><path id="node_outline56" fill="none" stroke="none" d="M1272.5,1221.5h44a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-44a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text56" fill="black"><text id="kity_text_474" text-rendering="inherit" font-size="12" dy=".8em" y="1224.5800018310547" x="1277.5">filter()</text></g></g><g id="minder_node57"><g id="node_expander56" style="cursor: pointer;" display="none"><path id="kity_path_485" fill="white" stroke="gray" d="M1239.5,1232.5A6,6,0,1,1,1227.5,1232.5A6,6,0,1,1,1239.5,1232.5"></path><path id="kity_path_486" fill="none" stroke="gray"></path></g><path id="node_outline57" fill="none" stroke="none" d="M838.5,1221.5h384a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-384a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text57" fill="black"><text id="kity_text_482" text-rendering="inherit" font-size="12" dy=".8em" y="1224.5800018310547" x="843.5">对数组中的每一运行给定的函数，会返回满足该函数的项组成的数组&#xa0;&#xa0; &#xa0;</text></g></g><g id="minder_node58"><g id="node_expander57" style="cursor: pointer;"><path id="kity_path_493" fill="white" stroke="gray" d="M1333.5,1284.5A6,6,0,1,1,1321.5,1284.5A6,6,0,1,1,1333.5,1284.5"></path><path id="kity_path_494" fill="none" stroke="gray" d="M1323,1284.5L1332,1284.5"></path></g><path id="node_outline58" fill="none" stroke="none" d="M1272.5,1273.5h44a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-44a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text58" fill="black"><text id="kity_text_490" text-rendering="inherit" font-size="12" dy=".8em" y="1276.5800018310547" x="1277.5">map()</text></g></g><g id="minder_node59"><g id="node_expander58" style="cursor: pointer;" display="none"><path id="kity_path_501" fill="white" stroke="gray" d="M1239.5,1284.5A6,6,0,1,1,1227.5,1284.5A6,6,0,1,1,1239.5,1284.5"></path><path id="kity_path_502" fill="none" stroke="gray"></path></g><path id="node_outline59" fill="none" stroke="none" d="M849.5,1273.5h373a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-373a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text59" fill="black"><text id="kity_text_498" text-rendering="inherit" font-size="12" dy=".8em" y="1276.5800018310547" x="854.5">对数组中的每一运行给定的函数,返回每次函数调用的结果组成的数组</text></g></g><g id="minder_node60"><g id="node_expander59" style="cursor: pointer;"><path id="kity_path_509" fill="white" stroke="gray" d="M1333.5,1380.5A6,6,0,1,1,1321.5,1380.5A6,6,0,1,1,1333.5,1380.5"></path><path id="kity_path_510" fill="none" stroke="gray" d="M1323,1380.5L1332,1380.5"></path></g><path id="node_outline60" fill="none" stroke="none" d="M1255.5,1369.5h61a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-61a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text60" fill="black"><text id="kity_text_506" text-rendering="inherit" font-size="12" dy=".8em" y="1372.5800018310547" x="1260.5">forEach()</text></g></g><g id="minder_node61"><g id="node_expander60" style="cursor: pointer;" display="none"><path id="kity_path_517" fill="white" stroke="gray" d="M1222.5,1336.5A6,6,0,1,1,1210.5,1336.5A6,6,0,1,1,1222.5,1336.5"></path><path id="kity_path_518" fill="none" stroke="gray"></path></g><path id="node_outline61" fill="none" stroke="none" d="M857.5,1325.5h348a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-348a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text61" fill="black"><text id="kity_text_514" text-rendering="inherit" font-size="12" dy=".8em" y="1328.5800018310547" x="862.5">对数组中的每一运行给定的函数,没有返回值，常用来遍历元素&#xa0;&#xa0;&#xa0; </text></g></g><g id="minder_node62" opacity="1"><g id="node_expander61" style="cursor: pointer;" display="none"><path id="kity_path_525" fill="white" stroke="gray" d="M1220.5,1412.5A6,6,0,1,1,1208.5,1412.5A6,6,0,1,1,1220.5,1412.5"></path><path id="kity_path_526" fill="none" stroke="gray"></path></g><path id="node_outline62" fill="none" stroke="none" d="M920.5,1383.5h283a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-283a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text62" fill="black"><text id="kity_text_522" text-rendering="inherit" font-size="12" dy=".8em" y="1386.5800018310547" x="925.5">var result = arr.forEach(function(item,index,arr){</text><text id="kity_text_527" text-rendering="inherit" font-size="12" dy=".8em" y="1404.5800018310547" x="925.5">	&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;console.log(item);</text><text id="kity_text_528" text-rendering="inherit" font-size="12" dy=".8em" y="1422.5800018310547" x="925.5">	&#xa0;&#xa0; &#xa0;});</text></g></g><g id="kity_g_12" display="none"><path id="kity_path_13" fill="none" stroke="rgb(66, 94, 112)" d="M1255.5,1353.5h61a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-61a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="5"></path></g></g></g></svg>