<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2370" height="1110" style="background: rgb(251, 251, 251) none repeat scroll 0% 0%; visibility: visible;" viewBox="0 0 2370 1110"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="geometricPrecision"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1039,551.5A179.5,0,0,0,1,1218.5,551.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1289.5,551.5C1304.5,551.5,1304.5,48.5,1319.5,48.5L1793.5,48.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1289.5,551.5C1315.5,551.5,1315.5,224.5,1341.5,224.5L1395.5,224.5"></path><path id="kity_path_92" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1289.5,551.5C1314.5,551.5,1314.5,379.5,1339.5,379.5L1393.5,379.5"></path><path id="kity_path_132" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1289.5,551.5C1316.5,551.5,1316.5,113.5,1343.5,113.5L1565.5,113.5"></path><path id="kity_path_194" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1927.5,70.5C1942.5,70.5,1942.5,44.5,1957.5,44.5L2062.5,44.5"></path><path id="kity_path_195" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1927.5,70.5C1942.5,70.5,1942.5,96.5,1957.5,96.5L2117.5,96.5"></path><path id="kity_path_196" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1831.5,113.5C1846.5,113.5,1846.5,70.5,1861.5,70.5L1927.5,70.5"></path><path id="kity_path_197" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1927.5,157.5C1965,157.5,1965,164.5,2002.5,164.5L2350.5,164.5"></path><path id="kity_path_198" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1831.5,113.5C1846.5,113.5,1846.5,157.5,1861.5,157.5L1927.5,157.5"></path><path id="kity_path_199" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1565.5,113.5C1580.5,113.5,1580.5,113.5,1595.5,113.5L1831.5,113.5"></path><path id="kity_path_204" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1537.5,176.5C1552.5,176.5,1552.5,194.5,1567.5,194.5L1729.5,194.5"></path><path id="kity_path_205" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1395.5,224.5C1410.5,224.5,1410.5,176.5,1425.5,176.5L1537.5,176.5"></path><path id="kity_path_206" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1525.5,273.5C1552.5,273.5,1552.5,287.5,1579.5,287.5L1711.5,287.5"></path><path id="kity_path_207" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1395.5,224.5C1410.5,224.5,1410.5,273.5,1425.5,273.5L1525.5,273.5"></path><path id="kity_path_208" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1511.5,353.5C1526.5,353.5,1526.5,353.5,1541.5,353.5L1624.5,353.5"></path><path id="kity_path_209" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1393.5,379.5C1408.5,379.5,1408.5,353.5,1423.5,353.5L1511.5,353.5"></path><path id="kity_path_210" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1535.5,405.5C1550.5,405.5,1550.5,405.5,1565.5,405.5L1653.5,405.5"></path><path id="kity_path_211" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1393.5,379.5C1408.5,379.5,1408.5,405.5,1423.5,405.5L1535.5,405.5"></path><path id="kity_path_213" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1289.5,551.5C1309,551.5,1309,480.5,1328.5,480.5L1406.5,480.5"></path><path id="kity_path_236" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1406.5,480.5C1419,480.5,1419,452.5,1431.5,452.5L1833.5,452.5"></path><path id="kity_path_237" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1406.5,480.5C1421.5,480.5,1421.5,506.5,1436.5,506.5L1742.5,506.5"></path><path id="kity_path_239" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1289.5,551.5C1310.5,551.5,1310.5,580.5,1331.5,580.5L1409.5,580.5"></path><path id="kity_path_270" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1409.5,580.5C1424.5,580.5,1424.5,554.5,1439.5,554.5L1769.5,554.5"></path><path id="kity_path_271" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1409.5,580.5C1424.5,580.5,1424.5,606.5,1439.5,606.5L1933.5,606.5"></path><path id="kity_path_273" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1289.5,551.5C1309.5,551.5,1309.5,757.5,1329.5,757.5L1493.5,757.5"></path><path id="kity_path_297" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1493.5,757.5C1511.5,757.5,1511.5,764.5,1529.5,764.5L2034.5,764.5"></path><path id="kity_path_299" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1289.5,551.5C1306,551.5,1306,959.5,1322.5,959.5L1555.5,959.5"></path><path id="kity_path_352" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1651.5,835.5C1666.5,835.5,1666.5,853.5,1681.5,853.5L1965.5,853.5"></path><path id="kity_path_353" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1555.5,959.5C1570.5,959.5,1570.5,835.5,1585.5,835.5L1651.5,835.5"></path><path id="kity_path_354" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1663.5,923.5C1678.5,923.5,1678.5,941.5,1693.5,941.5L1933.5,941.5"></path><path id="kity_path_355" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1555.5,959.5C1570.5,959.5,1570.5,923.5,1585.5,923.5L1663.5,923.5"></path><path id="kity_path_357" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1555.5,959.5C1570.5,959.5,1570.5,1047.5,1585.5,1047.5L1706.5,1047.5"></path><path id="kity_path_365" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1706.5,1047.5C1733.5,1047.5,1733.5,1089.5,1760.5,1089.5L1956.5,1089.5"></path><path id="kity_path_379" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1039,551.5A179.5,0,0,0,1,859.5,551.5"></path><path id="kity_path_387" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M788.5,551.5C773.5,551.5,773.5,278.5,758.5,278.5L704.5,278.5"></path><path id="kity_path_395" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M704.5,278.5C689.5,278.5,689.5,208.5,674.5,208.5L586.5,208.5"></path><path id="kity_path_403" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M704.5,278.5C689.5,278.5,689.5,348.5,674.5,348.5L574.5,348.5"></path><path id="kity_path_411" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M586.5,208.5C551.5,208.5,551.5,188.5,516.5,188.5L339.5,188.5"></path><path id="kity_path_421" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M586.5,208.5C560,208.5,560,254.5,533.5,254.5L215.5,254.5"></path><path id="kity_path_429" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M574.5,348.5C538.5,348.5,538.5,336.5,502.5,336.5L252.5,336.5"></path><path id="kity_path_439" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M574.5,348.5C547.5,348.5,547.5,392.5,520.5,392.5L143.5,392.5"></path><path id="kity_path_447" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M788.5,551.5C773.5,551.5,773.5,462.5,758.5,462.5L704.5,462.5"></path><path id="kity_path_455" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M704.5,462.5C669.5,462.5,669.5,480.5,634.5,480.5L372.5,480.5"></path><path id="kity_path_465" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M788.5,551.5C773.5,551.5,773.5,610.5,758.5,610.5L644.5,610.5"></path><path id="kity_path_473" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M644.5,610.5C629.5,610.5,629.5,558.5,614.5,558.5L522.5,558.5"></path><path id="kity_path_481" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M522.5,558.5C507.5,558.5,507.5,532.5,492.5,532.5L79.5,532.5"></path><path id="kity_path_489" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M522.5,558.5C507.5,558.5,507.5,584.5,492.5,584.5L20.5,584.5"></path><path id="kity_path_497" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M644.5,610.5C629.5,610.5,629.5,662.5,614.5,662.5L563.5,662.5"></path><path id="kity_path_505" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M563.5,662.5C548.5,662.5,548.5,636.5,533.5,636.5L323.5,636.5"></path><path id="kity_path_513" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M563.5,662.5C548.5,662.5,548.5,688.5,533.5,688.5L231.5,688.5"></path><path id="kity_path_521" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M788.5,551.5C773.5,551.5,773.5,852.5,758.5,852.5L668.5,852.5"></path><path id="kity_path_529" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M668.5,852.5C653.5,852.5,653.5,786.5,638.5,786.5L536.5,786.5"></path><path id="kity_path_537" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M668.5,852.5C653.5,852.5,653.5,919.5,638.5,919.5L524.5,919.5"></path><path id="kity_path_545" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M536.5,786.5C506.5,786.5,506.5,826.5,476.5,826.5L242.5,826.5"></path><path id="kity_path_558" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M524.5,919.5C470.5,919.5,470.5,945.5,416.5,945.5L254.5,945.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(115, 161, 191)" d="M982.5,531.5h113a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-113a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="540.939998626709" x="1001.5">ES5（二）</text></g></g><g id="kity_g_14" display="none"><path id="kity_path_15" fill="rgba(0, 92, 153, 0.5)" stroke="none" d="M167.5,634.5h367v15h-367z"></path><path id="kity_path_16" fill="none" stroke="rgb(0, 76, 128)" d="M167.5,649.5L534.5,649.5" stroke-width="1"></path></g><g id="minder_node2"><g id="node_expander1" style="cursor: pointer;"><path id="kity_path_36" fill="white" stroke="gray" d="M1219.5,551.5A6,6,0,1,1,1207.5,551.5A6,6,0,1,1,1219.5,551.5"></path><path id="kity_path_37" fill="none" stroke="gray" d="M1209,551.5L1218,551.5"></path></g><path id="node_outline2" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1223.5,538.5h63a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-63a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text2" fill="black"><text id="kity_text_33" text-rendering="inherit" font-size="14" dy=".8em" y="542.2599983215332" x="1240.5">对象</text></g></g><g id="minder_node3"><g id="node_expander2" style="cursor: pointer;" display="none"><path id="kity_path_44" fill="white" stroke="gray" d="M1329.5,34.5A6,6,0,1,1,1317.5,34.5A6,6,0,1,1,1329.5,34.5"></path><path id="kity_path_45" fill="none" stroke="gray"></path></g><path id="node_outline3" fill="none" stroke="none" d="M1334.5,23.5h454a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-454a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text3" fill="black"><text id="kity_text_41" text-rendering="inherit" font-size="12" dy=".8em" y="26.580001831054688" x="1339.5">特点：复杂数据类型，引用数据类型，保存的是键值对，属性可以动态的添加或删除</text></g></g><g id="minder_node4" opacity="1"><g id="node_expander3" style="cursor: pointer;"><path id="kity_path_52" fill="white" stroke="gray" d="M1351.5,210.5A6,6,0,1,1,1339.5,210.5A6,6,0,1,1,1351.5,210.5"></path><path id="kity_path_53" fill="none" stroke="gray" d="M1341,210.5L1350,210.5"></path></g><path id="node_outline4" fill="none" stroke="none" d="M1356.5,199.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text4" fill="black"><text id="kity_text_49" text-rendering="inherit" font-size="12" dy=".8em" y="202.5800018310547" x="1361.5">创建</text></g></g><g id="minder_node9" opacity="1"><g id="node_expander8" style="cursor: pointer;"><path id="kity_path_97" fill="white" stroke="gray" d="M1349.5,365.5A6,6,0,1,1,1337.5,365.5A6,6,0,1,1,1349.5,365.5"></path><path id="kity_path_98" fill="none" stroke="gray" d="M1339,365.5L1348,365.5"></path></g><path id="node_outline9" fill="none" stroke="none" d="M1354.5,354.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text9" fill="black"><text id="kity_text_94" text-rendering="inherit" font-size="12" dy=".8em" y="357.5800018310547" x="1359.5">访问</text></g></g><g id="minder_node14" opacity="1"><g id="node_expander13" style="cursor: pointer;"><path id="kity_path_137" fill="white" stroke="gray" d="M1353.5,99.5A6,6,0,1,1,1341.5,99.5A6,6,0,1,1,1353.5,99.5"></path><path id="kity_path_138" fill="none" stroke="gray" d="M1343,99.5L1352,99.5"></path></g><path id="node_outline14" fill="none" stroke="none" d="M1358.5,88.5h202a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-202a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text14" fill="black"><text id="kity_text_134" text-rendering="inherit" font-size="12" dy=".8em" y="91.58000183105469" x="1363.5">引用数据类型和基本数据类型的异同</text></g></g><g id="minder_node17"><g id="node_expander16" style="cursor: pointer;" display="none"><path id="kity_path_161" fill="white" stroke="gray" d="M1967.5,30.5A6,6,0,1,1,1955.5,30.5A6,6,0,1,1,1967.5,30.5"></path><path id="kity_path_162" fill="none" stroke="gray"></path></g><path id="node_outline17" fill="none" stroke="none" d="M1972.5,19.5h85a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-85a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text17" fill="black"><text id="kity_text_158" text-rendering="inherit" font-size="12" dy=".8em" y="22.580001831054688" x="1977.5">1.a,b都是变量</text></g></g><g id="minder_node18"><g id="node_expander17" style="cursor: pointer;" display="none"><path id="kity_path_169" fill="white" stroke="gray" d="M1967.5,82.5A6,6,0,1,1,1955.5,82.5A6,6,0,1,1,1967.5,82.5"></path><path id="kity_path_170" fill="none" stroke="gray"></path></g><path id="node_outline18" fill="none" stroke="none" d="M1972.5,71.5h140a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-140a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text18" fill="black"><text id="kity_text_166" text-rendering="inherit" font-size="12" dy=".8em" y="74.58000183105469" x="1977.5">2.变量的值都保存在栈区</text></g></g><g id="minder_node16"><g id="node_expander15" style="cursor: pointer;"><path id="kity_path_153" fill="white" stroke="gray" d="M1871.5,56.5A6,6,0,1,1,1859.5,56.5A6,6,0,1,1,1871.5,56.5"></path><path id="kity_path_154" fill="none" stroke="gray" d="M1861,56.5L1870,56.5"></path></g><path id="node_outline16" fill="none" stroke="none" d="M1876.5,45.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text16" fill="black"><text id="kity_text_150" text-rendering="inherit" font-size="12" dy=".8em" y="48.58000183105469" x="1881.5">相同点</text></g></g><g id="minder_node20" opacity="1"><g id="node_expander19" style="cursor: pointer;" display="none"><path id="kity_path_185" fill="white" stroke="gray" d="M2012.5,141.5A6,6,0,1,1,2000.5,141.5A6,6,0,1,1,2012.5,141.5"></path><path id="kity_path_186" fill="none" stroke="gray"></path></g><path id="node_outline20" fill="none" stroke="none" d="M2017.5,121.5h328a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-328a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text20" fill="black"><text id="kity_text_182" text-rendering="inherit" font-size="12" dy=".8em" y="124.58000183105469" x="2022.5">a在栈保存的值是具体的值（基本）</text><text id="kity_text_187" text-rendering="inherit" font-size="12" dy=".8em" y="142.5800018310547" x="2022.5">b在栈保存的引用地址，这个地址指向堆区中的某一块内存&#xa0;&#xa0;&#xa0; </text></g></g><g id="minder_node19"><g id="node_expander18" style="cursor: pointer;"><path id="kity_path_177" fill="white" stroke="gray" d="M1871.5,143.5A6,6,0,1,1,1859.5,143.5A6,6,0,1,1,1871.5,143.5"></path><path id="kity_path_178" fill="none" stroke="gray" d="M1861,143.5L1870,143.5"></path></g><path id="node_outline19" fill="none" stroke="none" d="M1876.5,132.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text19" fill="black"><text id="kity_text_174" text-rendering="inherit" font-size="12" dy=".8em" y="135.5800018310547" x="1881.5">不同点</text></g></g><g id="minder_node15"><g id="node_expander14" style="cursor: pointer;"><path id="kity_path_145" fill="white" stroke="gray" d="M1605.5,99.5A6,6,0,1,1,1593.5,99.5A6,6,0,1,1,1605.5,99.5"></path><path id="kity_path_146" fill="none" stroke="gray" d="M1595,99.5L1604,99.5"></path></g><path id="node_outline15" fill="none" stroke="none" d="M1610.5,88.5h216a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-216a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text15" fill="black"><text id="kity_text_142" text-rendering="inherit" font-size="12" dy=".8em" y="91.58000183105469" x="1615.5">var a = 3; var b ={name:"bigbabol"};</text></g></g><g id="minder_node6"><g id="node_expander5" style="cursor: pointer;" display="none"><path id="kity_path_68" fill="white" stroke="gray" d="M1577.5,162.5A6,6,0,1,1,1565.5,162.5A6,6,0,1,1,1577.5,162.5"></path><path id="kity_path_69" fill="none" stroke="gray"></path></g><path id="node_outline6" fill="none" stroke="none" d="M1582.5,133.5h142a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-142a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text6" fill="black"><text id="kity_text_65" text-rendering="inherit" font-size="12" dy=".8em" y="136.5800018310547" x="1587.5">var obj = new Object();</text><text id="kity_text_70" text-rendering="inherit" font-size="12" dy=".8em" y="154.5800018310547" x="1587.5">obj.name = 'bigbabol';</text><text id="kity_text_71" text-rendering="inherit" font-size="12" dy=".8em" y="172.5800018310547" x="1587.5">obj.age = 21;</text></g></g><g id="minder_node5"><g id="node_expander4" style="cursor: pointer;"><path id="kity_path_60" fill="white" stroke="gray" d="M1435.5,162.5A6,6,0,1,1,1423.5,162.5A6,6,0,1,1,1435.5,162.5"></path><path id="kity_path_61" fill="none" stroke="gray" d="M1425,162.5L1434,162.5"></path></g><path id="node_outline5" fill="none" stroke="none" d="M1440.5,151.5h92a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-92a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text5" fill="black"><text id="kity_text_57" text-rendering="inherit" font-size="12" dy=".8em" y="154.5800018310547" x="1445.5">1.创建构造函数</text></g></g><g id="minder_node8" opacity="1"><g id="node_expander7" style="cursor: pointer;" display="none"><path id="kity_path_86" fill="white" stroke="gray" d="M1589.5,246.5A6,6,0,1,1,1577.5,246.5A6,6,0,1,1,1589.5,246.5"></path><path id="kity_path_87" fill="none" stroke="gray"></path></g><path id="node_outline8" fill="none" stroke="none" d="M1594.5,208.5h112a5,5,0,0,1,5,5v66a5,5,0,0,1,-5,5h-112a5,5,0,0,1,-5,-5v-66a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text8" fill="black"><text id="kity_text_83" text-rendering="inherit" font-size="12" dy=".8em" y="211.5800018310547" x="1599.5">var obj = {</text><text id="kity_text_88" text-rendering="inherit" font-size="12" dy=".8em" y="229.5800018310547" x="1599.5">	&#xa0; name:'bigbabol',</text><text id="kity_text_89" text-rendering="inherit" font-size="12" dy=".8em" y="247.5800018310547" x="1599.5">	&#xa0; age:21</text><text id="kity_text_90" text-rendering="inherit" font-size="12" dy=".8em" y="265.5800018310547" x="1599.5">&#xa0;};</text></g></g><g id="minder_node7"><g id="node_expander6" style="cursor: pointer;"><path id="kity_path_78" fill="white" stroke="gray" d="M1435.5,259.5A6,6,0,1,1,1423.5,259.5A6,6,0,1,1,1435.5,259.5"></path><path id="kity_path_79" fill="none" stroke="gray" d="M1425,259.5L1434,259.5"></path></g><path id="node_outline7" fill="none" stroke="none" d="M1440.5,248.5h80a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-80a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text7" fill="black"><text id="kity_text_75" text-rendering="inherit" font-size="12" dy=".8em" y="251.5800018310547" x="1445.5">2.对象字面量</text></g></g><g id="minder_node11"><g id="node_expander10" style="cursor: pointer;" display="none"><path id="kity_path_113" fill="white" stroke="gray" d="M1551.5,339.5A6,6,0,1,1,1539.5,339.5A6,6,0,1,1,1551.5,339.5"></path><path id="kity_path_114" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M1556.5,328.5h63a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-63a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text11" fill="black"><text id="kity_text_110" text-rendering="inherit" font-size="12" dy=".8em" y="331.5800018310547" x="1561.5">obj.name</text></g></g><g id="minder_node10"><g id="node_expander9" style="cursor: pointer;"><path id="kity_path_105" fill="white" stroke="gray" d="M1433.5,339.5A6,6,0,1,1,1421.5,339.5A6,6,0,1,1,1433.5,339.5"></path><path id="kity_path_106" fill="none" stroke="gray" d="M1423,339.5L1432,339.5"></path></g><path id="node_outline10" fill="none" stroke="none" d="M1438.5,328.5h68a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-68a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text10" fill="black"><text id="kity_text_102" text-rendering="inherit" font-size="12" dy=".8em" y="331.5800018310547" x="1443.5">1.点访问法</text></g></g><g id="minder_node13"><g id="node_expander12" style="cursor: pointer;" display="none"><path id="kity_path_129" fill="white" stroke="gray" d="M1575.5,391.5A6,6,0,1,1,1563.5,391.5A6,6,0,1,1,1575.5,391.5"></path><path id="kity_path_130" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M1580.5,380.5h68a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-68a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text13" fill="black"><text id="kity_text_126" text-rendering="inherit" font-size="12" dy=".8em" y="383.5800018310547" x="1585.5">obj["age"]</text></g></g><g id="minder_node12"><g id="node_expander11" style="cursor: pointer;"><path id="kity_path_121" fill="white" stroke="gray" d="M1433.5,391.5A6,6,0,1,1,1421.5,391.5A6,6,0,1,1,1433.5,391.5"></path><path id="kity_path_122" fill="none" stroke="gray" d="M1423,391.5L1432,391.5"></path></g><path id="node_outline12" fill="none" stroke="none" d="M1438.5,380.5h92a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-92a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text12" fill="black"><text id="kity_text_118" text-rendering="inherit" font-size="12" dy=".8em" y="383.5800018310547" x="1443.5">2.中括号访问法</text></g></g><g id="minder_node21" opacity="1"><g id="node_expander20" style="cursor: pointer;"><path id="kity_path_218" fill="white" stroke="gray" d="M1338.5,466.5A6,6,0,1,1,1326.5,466.5A6,6,0,1,1,1338.5,466.5"></path><path id="kity_path_219" fill="none" stroke="gray" d="M1328,466.5L1337,466.5"></path></g><path id="node_outline21" fill="none" stroke="none" d="M1343.5,455.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text21" fill="black"><text id="kity_text_215" text-rendering="inherit" font-size="12" dy=".8em" y="458.5800018310547" x="1348.5">删除属性</text></g></g><g id="minder_node22" opacity="1"><g id="node_expander21" style="cursor: pointer;" display="none"><path id="kity_path_226" fill="white" stroke="gray" d="M1441.5,438.5A6,6,0,1,1,1429.5,438.5A6,6,0,1,1,1441.5,438.5"></path><path id="kity_path_227" fill="none" stroke="gray"></path></g><path id="node_outline22" fill="none" stroke="none" d="M1446.5,427.5h382a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-382a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text22" fill="black"><text id="kity_text_223" text-rendering="inherit" font-size="12" dy=".8em" y="430.5800018310547" x="1451.5">delete只是断开了属性和宿主对象的联系，而不会操作属性中的属性。</text></g></g><g id="minder_node23"><g id="node_expander22" style="cursor: pointer;" display="none"><path id="kity_path_234" fill="white" stroke="gray" d="M1446.5,492.5A6,6,0,1,1,1434.5,492.5A6,6,0,1,1,1446.5,492.5"></path><path id="kity_path_235" fill="none" stroke="gray"></path></g><path id="node_outline23" fill="none" stroke="none" d="M1451.5,481.5h286a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-286a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text23" fill="black"><text id="kity_text_231" text-rendering="inherit" font-size="12" dy=".8em" y="484.5800018310547" x="1456.5">并且delete只会删除自有属性，不能删除继承属性。</text></g></g><g id="minder_node24" opacity="1"><g id="node_expander23" style="cursor: pointer;"><path id="kity_path_244" fill="white" stroke="gray" d="M1341.5,566.5A6,6,0,1,1,1329.5,566.5A6,6,0,1,1,1341.5,566.5"></path><path id="kity_path_245" fill="none" stroke="gray" d="M1331,566.5L1340,566.5"></path></g><path id="node_outline24" fill="none" stroke="none" d="M1346.5,555.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text24" fill="black"><text id="kity_text_241" text-rendering="inherit" font-size="12" dy=".8em" y="558.5800018310547" x="1351.5">属性检测</text></g></g><g id="minder_node25"><g id="node_expander24" style="cursor: pointer;" display="none"><path id="kity_path_252" fill="white" stroke="gray" d="M1449.5,540.5A6,6,0,1,1,1437.5,540.5A6,6,0,1,1,1449.5,540.5"></path><path id="kity_path_253" fill="none" stroke="gray"></path></g><path id="node_outline25" fill="none" stroke="none" d="M1454.5,529.5h310a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-310a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text25" fill="black"><text id="kity_text_249" text-rendering="inherit" font-size="12" dy=".8em" y="532.5800018310547" x="1459.5">1.in 检测某属性是否是某对象的自有属性或者是继承属性</text></g></g><g id="minder_node26"><g id="node_expander25" style="cursor: pointer;" display="none"><path id="kity_path_260" fill="white" stroke="gray" d="M1449.5,592.5A6,6,0,1,1,1437.5,592.5A6,6,0,1,1,1449.5,592.5"></path><path id="kity_path_261" fill="none" stroke="gray"></path></g><path id="node_outline26" fill="none" stroke="none" d="M1454.5,581.5h474a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-474a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text26" fill="black"><text id="kity_text_257" text-rendering="inherit" font-size="12" dy=".8em" y="584.5800018310547" x="1459.5">2.hasOwnProperty()检测给定的属性是否是对象的自有属性，对于继承属性将返回false</text></g></g><g id="minder_node28" opacity="1"><g id="node_expander27" style="cursor: pointer;"><path id="kity_path_278" fill="white" stroke="gray" d="M1339.5,743.5A6,6,0,1,1,1327.5,743.5A6,6,0,1,1,1339.5,743.5"></path><path id="kity_path_279" fill="none" stroke="gray" d="M1329,743.5L1338,743.5"></path></g><path id="node_outline28" fill="none" stroke="none" d="M1344.5,732.5h144a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-144a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text28" fill="black"><text id="kity_text_275" text-rendering="inherit" font-size="12" dy=".8em" y="735.5800018310547" x="1349.5">Obejct对象的属性和方法</text></g></g><g id="minder_node29" opacity="1"><g id="node_expander28" style="cursor: pointer;" display="none"><path id="kity_path_286" fill="white" stroke="gray" d="M1539.5,696.5A6,6,0,1,1,1527.5,696.5A6,6,0,1,1,1539.5,696.5"></path><path id="kity_path_287" fill="none" stroke="gray"></path></g><path id="node_outline29" fill="none" stroke="none" d="M1544.5,631.5h485a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-485a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text29" fill="black"><text id="kity_text_283" text-rendering="inherit" font-size="12" dy=".8em" y="634.5800018310547" x="1549.5">constructor; &#xa0; &#xa0;&#xa0;&#xa0; &#xa0;&#xa0;&#xa0;&#xa0; //保存用户创建当前对象的函数</text><text id="kity_text_288" text-rendering="inherit" font-size="12" dy=".8em" y="652.5800018310547" x="1549.5">hasOwnProperty(propertyName);&#xa0;&#xa0; &#xa0;//检查给定的属性名是否是对象的自有属性，</text><text id="kity_text_289" text-rendering="inherit" font-size="12" dy=".8em" y="670.5800018310547" x="1549.5">toString();&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;//返回对象的字符串表示</text><text id="kity_text_290" text-rendering="inherit" font-size="12" dy=".8em" y="688.5800018310547" x="1549.5">valueOf();&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;//返回对象的字符串，数值，布尔值的表示。</text><text id="kity_text_291" text-rendering="inherit" font-size="12" dy=".8em" y="706.5800018310547" x="1549.5">propertyIsEnumerable(propertyName);&#xa0;&#xa0; &#xa0;//检查给定的属性在当前对象实例中是否存在</text><text id="kity_text_292" text-rendering="inherit" font-size="12" dy=".8em" y="724.5800018310547" x="1549.5">isPrototypeOf(object);&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;//检查传入的对象是否是原型</text><text id="kity_text_293" text-rendering="inherit" font-size="12" dy=".8em" y="742.5800018310547" x="1549.5">toLocaleString();&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;//返回对象的字符串表示，该字符串与执行环境的地区对应</text></g></g><g id="minder_node30" opacity="1"><g id="node_expander29" style="cursor: pointer;"><path id="kity_path_304" fill="white" stroke="gray" d="M1332.5,927.5A6,6,0,1,1,1320.5,927.5A6,6,0,1,1,1332.5,927.5"></path><path id="kity_path_305" fill="none" stroke="gray" d="M1322,927.5L1331,927.5"></path></g><path id="node_outline30" fill="none" stroke="none" d="M1337.5,898.5h213a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-213a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text30" fill="black"><text id="kity_text_301" text-rendering="inherit" font-size="12" dy=".8em" y="901.5800018310547" x="1342.5">序列化和反序列化</text><text id="kity_text_314" text-rendering="inherit" font-size="12" dy=".8em" y="919.5800018310547" x="1342.5">RegExp,Error对象，</text><text id="kity_text_315" text-rendering="inherit" font-size="12" dy=".8em" y="937.5800018310547" x="1342.5">undefined值不能序列化和反序列化。</text></g></g><g id="minder_node33"><g id="node_expander32" style="cursor: pointer;" display="none"><path id="kity_path_330" fill="white" stroke="gray" d="M1691.5,821.5A6,6,0,1,1,1679.5,821.5A6,6,0,1,1,1691.5,821.5"></path><path id="kity_path_331" fill="none" stroke="gray"></path></g><path id="node_outline33" fill="none" stroke="none" d="M1696.5,792.5h264a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-264a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text33" fill="black"><text id="kity_text_327" text-rendering="inherit" font-size="12" dy=".8em" y="795.5800018310547" x="1701.5">var obj = {name:'bigbabol'}</text><text id="kity_text_332" text-rendering="inherit" font-size="12" dy=".8em" y="813.5800018310547" x="1701.5">var json = JSON.stringify(obj);</text><text id="kity_text_333" text-rendering="inherit" font-size="12" dy=".8em" y="831.5800018310547" x="1701.5">将obj转换为JSON字符串，然后返回给变量json</text></g></g><g id="minder_node32"><g id="node_expander31" style="cursor: pointer;"><path id="kity_path_322" fill="white" stroke="gray" d="M1595.5,821.5A6,6,0,1,1,1583.5,821.5A6,6,0,1,1,1595.5,821.5"></path><path id="kity_path_323" fill="none" stroke="gray" d="M1585,821.5L1594,821.5"></path></g><path id="node_outline32" fill="none" stroke="none" d="M1600.5,810.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text32" fill="black"><text id="kity_text_319" text-rendering="inherit" font-size="12" dy=".8em" y="813.5800018310547" x="1605.5">序列化</text></g></g><g id="minder_node35"><g id="node_expander34" style="cursor: pointer;" display="none"><path id="kity_path_348" fill="white" stroke="gray" d="M1703.5,909.5A6,6,0,1,1,1691.5,909.5A6,6,0,1,1,1703.5,909.5"></path><path id="kity_path_349" fill="none" stroke="gray"></path></g><path id="node_outline35" fill="none" stroke="none" d="M1708.5,880.5h220a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-220a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text35" fill="black"><text id="kity_text_345" text-rendering="inherit" font-size="12" dy=".8em" y="883.5800018310547" x="1713.5">var json = '{"name":"biabgbol"}';</text><text id="kity_text_350" text-rendering="inherit" font-size="12" dy=".8em" y="901.5800018310547" x="1713.5">var obj = JSON.parse(json);</text><text id="kity_text_351" text-rendering="inherit" font-size="12" dy=".8em" y="919.5800018310547" x="1713.5">将json字符串转换对象，返回给变量obj</text></g></g><g id="minder_node34"><g id="node_expander33" style="cursor: pointer;"><path id="kity_path_340" fill="white" stroke="gray" d="M1595.5,909.5A6,6,0,1,1,1583.5,909.5A6,6,0,1,1,1595.5,909.5"></path><path id="kity_path_341" fill="none" stroke="gray" d="M1585,909.5L1594,909.5"></path></g><path id="node_outline34" fill="none" stroke="none" d="M1600.5,898.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text34" fill="black"><text id="kity_text_337" text-rendering="inherit" font-size="12" dy=".8em" y="901.5800018310547" x="1605.5">反序列化</text></g></g><g id="minder_node36"><g id="node_expander35" style="cursor: pointer;"><path id="kity_path_362" fill="white" stroke="gray" d="M1595.5,1033.5A6,6,0,1,1,1583.5,1033.5A6,6,0,1,1,1595.5,1033.5"></path><path id="kity_path_363" fill="none" stroke="gray" d="M1585,1033.5L1594,1033.5"></path></g><path id="node_outline36" fill="none" stroke="none" d="M1600.5,1022.5h101a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-101a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text36" fill="black"><text id="kity_text_359" text-rendering="inherit" font-size="12" dy=".8em" y="1025.5800018310547" x="1605.5">JSON对象的特点</text></g></g><g id="minder_node37" opacity="1"><g id="node_expander36" style="cursor: pointer;" display="none"><path id="kity_path_370" fill="white" stroke="gray" d="M1770.5,1021.5A6,6,0,1,1,1758.5,1021.5A6,6,0,1,1,1770.5,1021.5"></path><path id="kity_path_371" fill="none" stroke="gray"></path></g><path id="node_outline37" fill="none" stroke="none" d="M1775.5,956.5h176a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-176a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text37" fill="black"><text id="kity_text_367" text-rendering="inherit" font-size="12" dy=".8em" y="959.5800018310547" x="1780.5">'{"key1":"val1","key2":"val2"}'</text><text id="kity_text_372" text-rendering="inherit" font-size="12" dy=".8em" y="977.5800018310547" x="1780.5">字符串</text><text id="kity_text_373" text-rendering="inherit" font-size="12" dy=".8em" y="995.5800018310547" x="1780.5">使用{}括起来</text><text id="kity_text_374" text-rendering="inherit" font-size="12" dy=".8em" y="1013.5800018310547" x="1780.5">属性名与属性值之间通过:隔开</text><text id="kity_text_375" text-rendering="inherit" font-size="12" dy=".8em" y="1031.5800018310547" x="1780.5">属性与属性之间通过,隔开</text><text id="kity_text_376" text-rendering="inherit" font-size="12" dy=".8em" y="1049.5800018310547" x="1780.5">属性名必须加双引号""</text><text id="kity_text_377" text-rendering="inherit" font-size="12" dy=".8em" y="1067.5800018310547" x="1780.5">属性值如果是字符串也必须加""</text></g></g><g id="minder_node38"><g id="node_expander37" style="cursor: pointer;"><path id="kity_path_384" fill="white" stroke="gray" d="M870.5,551.5A6,6,0,1,1,858.5,551.5A6,6,0,1,1,870.5,551.5"></path><path id="kity_path_385" fill="none" stroke="gray" d="M860,551.5L869,551.5"></path></g><path id="node_outline38" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M791.5,538.5h63a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-63a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text38" fill="black"><text id="kity_text_381" text-rendering="inherit" font-size="14" dy=".8em" y="542.2599983215332" x="808.5">函数</text></g></g><g id="minder_node39"><g id="node_expander38" style="cursor: pointer;"><path id="kity_path_392" fill="white" stroke="gray" d="M760.5,264.5A6,6,0,1,1,748.5,264.5A6,6,0,1,1,760.5,264.5"></path><path id="kity_path_393" fill="none" stroke="gray" d="M750,264.5L759,264.5"></path></g><path id="node_outline39" fill="none" stroke="none" d="M709.5,253.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text39" fill="black"><text id="kity_text_389" text-rendering="inherit" font-size="12" dy=".8em" y="256.5800018310547" x="714.5">定义</text></g></g><g id="minder_node40"><g id="node_expander39" style="cursor: pointer;"><path id="kity_path_400" fill="white" stroke="gray" d="M676.5,194.5A6,6,0,1,1,664.5,194.5A6,6,0,1,1,676.5,194.5"></path><path id="kity_path_401" fill="none" stroke="gray" d="M666,194.5L675,194.5"></path></g><path id="node_outline40" fill="none" stroke="none" d="M591.5,183.5h68a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-68a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text40" fill="black"><text id="kity_text_397" text-rendering="inherit" font-size="12" dy=".8em" y="186.5800018310547" x="596.5">1.函数声明</text></g></g><g id="minder_node41"><g id="node_expander40" style="cursor: pointer;"><path id="kity_path_408" fill="white" stroke="gray" d="M676.5,334.5A6,6,0,1,1,664.5,334.5A6,6,0,1,1,676.5,334.5"></path><path id="kity_path_409" fill="none" stroke="gray" d="M666,334.5L675,334.5"></path></g><path id="node_outline41" fill="none" stroke="none" d="M579.5,323.5h80a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-80a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text41" fill="black"><text id="kity_text_405" text-rendering="inherit" font-size="12" dy=".8em" y="326.5800018310547" x="584.5">2.函数表达式</text></g></g><g id="minder_node42" opacity="1"><g id="node_expander41" style="cursor: pointer;" display="none"><path id="kity_path_416" fill="white" stroke="gray" d="M518.5,156.5A6,6,0,1,1,506.5,156.5A6,6,0,1,1,518.5,156.5"></path><path id="kity_path_417" fill="none" stroke="gray"></path></g><path id="node_outline42" fill="none" stroke="rgb(57, 80, 96)" d="M344.5,127.5h157a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-157a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text42" fill="black"><text id="kity_text_413" text-rendering="inherit" font-size="12" dy=".8em" y="130.5800018310547" x="349.5">function 函数名(形参列表){</text><text id="kity_text_418" text-rendering="inherit" font-size="12" dy=".8em" y="148.5800018310547" x="349.5">	&#xa0;&#xa0; &#xa0;//函数体</text><text id="kity_text_419" text-rendering="inherit" font-size="12" dy=".8em" y="166.5800018310547" x="349.5">	}</text></g></g><g id="minder_node43" opacity="1"><g id="node_expander42" style="cursor: pointer;" display="none"><path id="kity_path_426" fill="white" stroke="gray" d="M535.5,240.5A6,6,0,1,1,523.5,240.5A6,6,0,1,1,535.5,240.5"></path><path id="kity_path_427" fill="none" stroke="gray"></path></g><path id="node_outline43" fill="none" stroke="none" d="M220.5,229.5h298a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-298a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text43" fill="black"><text id="kity_text_423" text-rendering="inherit" font-size="12" dy=".8em" y="232.5800018310547" x="225.5">函数声明会提升，也就说在函数声明前可以调用该函数</text></g></g><g id="minder_node44" opacity="1"><g id="node_expander43" style="cursor: pointer;" display="none"><path id="kity_path_434" fill="white" stroke="gray" d="M504.5,304.5A6,6,0,1,1,492.5,304.5A6,6,0,1,1,504.5,304.5"></path><path id="kity_path_435" fill="none" stroke="gray"></path></g><path id="node_outline44" fill="none" stroke="none" d="M257.5,275.5h230a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-230a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text44" fill="black"><text id="kity_text_431" text-rendering="inherit" font-size="12" dy=".8em" y="278.5800018310547" x="262.5">var 函数名 = function 函数名(形参列表){</text><text id="kity_text_436" text-rendering="inherit" font-size="12" dy=".8em" y="296.5800018310547" x="262.5">	&#xa0;&#xa0; &#xa0;//函数体</text><text id="kity_text_437" text-rendering="inherit" font-size="12" dy=".8em" y="314.5800018310547" x="262.5">	}</text></g></g><g id="minder_node45" opacity="1"><g id="node_expander44" style="cursor: pointer;" display="none"><path id="kity_path_444" fill="white" stroke="gray" d="M522.5,378.5A6,6,0,1,1,510.5,378.5A6,6,0,1,1,522.5,378.5"></path><path id="kity_path_445" fill="none" stroke="gray"></path></g><path id="node_outline45" fill="none" stroke="none" d="M148.5,367.5h357a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-357a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text45" fill="black"><text id="kity_text_441" text-rendering="inherit" font-size="12" dy=".8em" y="370.5800018310547" x="153.5">函数表达式的函数名会提升，提升后在函数前调用指向undefined</text></g></g><g id="minder_node46"><g id="node_expander45" style="cursor: pointer;"><path id="kity_path_452" fill="white" stroke="gray" d="M760.5,448.5A6,6,0,1,1,748.5,448.5A6,6,0,1,1,760.5,448.5"></path><path id="kity_path_453" fill="none" stroke="gray" d="M750,448.5L759,448.5"></path></g><path id="node_outline46" fill="none" stroke="none" d="M709.5,437.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text46" fill="black"><text id="kity_text_449" text-rendering="inherit" font-size="12" dy=".8em" y="440.5800018310547" x="714.5">调用</text></g></g><g id="minder_node47" opacity="1"><g id="node_expander46" style="cursor: pointer;" display="none"><path id="kity_path_460" fill="white" stroke="gray" d="M636.5,448.5A6,6,0,1,1,624.5,448.5A6,6,0,1,1,636.5,448.5"></path><path id="kity_path_461" fill="none" stroke="gray"></path></g><path id="node_outline47" fill="none" stroke="none" d="M377.5,419.5h242a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-242a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text47" fill="black"><text id="kity_text_457" text-rendering="inherit" font-size="12" dy=".8em" y="422.5800018310547" x="382.5">函数名(实参列表);</text><text id="kity_text_462" text-rendering="inherit" font-size="12" dy=".8em" y="440.5800018310547" x="382.5">&#xa0;函数名.call(执行环境对象,实参列表);</text><text id="kity_text_463" text-rendering="inherit" font-size="12" dy=".8em" y="458.5800018310547" x="382.5">&#xa0;函数名.apply(执行环境对象,实参列表数组);</text></g></g><g id="minder_node48"><g id="node_expander47" style="cursor: pointer;"><path id="kity_path_470" fill="white" stroke="gray" d="M760.5,596.5A6,6,0,1,1,748.5,596.5A6,6,0,1,1,760.5,596.5"></path><path id="kity_path_471" fill="none" stroke="gray" d="M750,596.5L759,596.5"></path></g><path id="node_outline48" fill="none" stroke="none" d="M649.5,585.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text48" fill="black"><text id="kity_text_467" text-rendering="inherit" font-size="12" dy=".8em" y="588.5800018310547" x="654.5">函数的内部属性</text></g></g><g id="minder_node49"><g id="node_expander48" style="cursor: pointer;"><path id="kity_path_478" fill="white" stroke="gray" d="M616.5,544.5A6,6,0,1,1,604.5,544.5A6,6,0,1,1,616.5,544.5"></path><path id="kity_path_479" fill="none" stroke="gray" d="M606,544.5L615,544.5"></path></g><path id="node_outline49" fill="none" stroke="none" d="M527.5,533.5h72a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-72a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text49" fill="black"><text id="kity_text_475" text-rendering="inherit" font-size="12" dy=".8em" y="536.5800018310547" x="532.5">arguments</text></g></g><g id="minder_node50"><g id="node_expander49" style="cursor: pointer;" display="none"><path id="kity_path_486" fill="white" stroke="gray" d="M494.5,518.5A6,6,0,1,1,482.5,518.5A6,6,0,1,1,494.5,518.5"></path><path id="kity_path_487" fill="none" stroke="gray"></path></g><path id="node_outline50" fill="none" stroke="none" d="M84.5,507.5h393a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-393a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text50" fill="black"><text id="kity_text_483" text-rendering="inherit" font-size="12" dy=".8em" y="510.5800018310547" x="89.5">1.类数组对象，包含着传入函数中所有实参，length属性，下标获取元素</text></g></g><g id="minder_node51"><g id="node_expander50" style="cursor: pointer;" display="none"><path id="kity_path_494" fill="white" stroke="gray" d="M494.5,570.5A6,6,0,1,1,482.5,570.5A6,6,0,1,1,494.5,570.5"></path><path id="kity_path_495" fill="none" stroke="gray"></path></g><path id="node_outline51" fill="none" stroke="none" d="M25.5,559.5h452a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-452a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text51" fill="black"><text id="kity_text_491" text-rendering="inherit" font-size="12" dy=".8em" y="562.5800018310547" x="30.5">2.arguments对象还有一个callee的属性，用来指向拥有这个arguments对象的函数</text></g></g><g id="minder_node52"><g id="node_expander51" style="cursor: pointer;"><path id="kity_path_502" fill="white" stroke="gray" d="M616.5,648.5A6,6,0,1,1,604.5,648.5A6,6,0,1,1,616.5,648.5"></path><path id="kity_path_503" fill="none" stroke="gray" d="M606,648.5L615,648.5"></path></g><path id="node_outline52" fill="none" stroke="none" d="M568.5,637.5h31a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-31a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text52" fill="black"><text id="kity_text_499" text-rendering="inherit" font-size="12" dy=".8em" y="640.5800018310547" x="573.5">this</text></g></g><g id="minder_node53"><g id="node_expander52" style="cursor: pointer;" display="none"><path id="kity_path_510" fill="white" stroke="gray" d="M535.5,622.5A6,6,0,1,1,523.5,622.5A6,6,0,1,1,535.5,622.5"></path><path id="kity_path_511" fill="none" stroke="gray"></path></g><path id="node_outline53" fill="none" stroke="none" d="M328.5,611.5h190a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-190a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text53" fill="black"><text id="kity_text_507" text-rendering="inherit" font-size="12" dy=".8em" y="614.5800018310547" x="333.5">指向的是函数赖以执行的环境对象</text></g></g><g id="minder_node54"><g id="node_expander53" style="cursor: pointer;" display="none"><path id="kity_path_518" fill="white" stroke="gray" d="M535.5,674.5A6,6,0,1,1,523.5,674.5A6,6,0,1,1,535.5,674.5"></path><path id="kity_path_519" fill="none" stroke="gray"></path></g><path id="node_outline54" fill="none" stroke="none" d="M236.5,663.5h282a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-282a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text54" fill="black"><text id="kity_text_515" text-rendering="inherit" font-size="12" dy=".8em" y="666.5800018310547" x="241.5">谁调用this指向谁，但是call和apply会改变this指向</text></g></g><g id="minder_node55"><g id="node_expander54" style="cursor: pointer;"><path id="kity_path_526" fill="white" stroke="gray" d="M760.5,838.5A6,6,0,1,1,748.5,838.5A6,6,0,1,1,760.5,838.5"></path><path id="kity_path_527" fill="none" stroke="gray" d="M750,838.5L759,838.5"></path></g><path id="node_outline55" fill="none" stroke="none" d="M673.5,827.5h70a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-70a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text55" fill="black"><text id="kity_text_523" text-rendering="inherit" font-size="12" dy=".8em" y="830.5800018310547" x="678.5">函数的应用</text></g></g><g id="minder_node56"><g id="node_expander55" style="cursor: pointer;"><path id="kity_path_534" fill="white" stroke="gray" d="M640.5,772.5A6,6,0,1,1,628.5,772.5A6,6,0,1,1,640.5,772.5"></path><path id="kity_path_535" fill="none" stroke="gray" d="M630,772.5L639,772.5"></path></g><path id="node_outline56" fill="none" stroke="none" d="M541.5,761.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text56" fill="black"><text id="kity_text_531" text-rendering="inherit" font-size="12" dy=".8em" y="764.5800018310547" x="546.5">函数作为参数</text></g></g><g id="minder_node57"><g id="node_expander56" style="cursor: pointer;"><path id="kity_path_542" fill="white" stroke="gray" d="M640.5,905.5A6,6,0,1,1,628.5,905.5A6,6,0,1,1,640.5,905.5"></path><path id="kity_path_543" fill="none" stroke="gray" d="M630,905.5L639,905.5"></path></g><path id="node_outline57" fill="none" stroke="none" d="M529.5,894.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text57" fill="black"><text id="kity_text_539" text-rendering="inherit" font-size="12" dy=".8em" y="897.5800018310547" x="534.5">函数作为返回值</text></g></g><g id="minder_node58" opacity="1"><g id="node_expander57" style="cursor: pointer;" display="none"><path id="kity_path_550" fill="white" stroke="gray" d="M478.5,767.5A6,6,0,1,1,466.5,767.5A6,6,0,1,1,478.5,767.5"></path><path id="kity_path_551" fill="none" stroke="gray"></path></g><path id="node_outline58" fill="none" stroke="none" d="M247.5,711.5h214a5,5,0,0,1,5,5v102a5,5,0,0,1,-5,5h-214a5,5,0,0,1,-5,-5v-102a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text58" fill="black"><text id="kity_text_547" text-rendering="inherit" font-size="12" dy=".8em" y="714.5800018310547" x="252.5">function callOther(fun,args){&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;</text><text id="kity_text_552" text-rendering="inherit" font-size="12" dy=".8em" y="732.5800018310547" x="252.5">	return fun(args);&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;</text><text id="kity_text_553" text-rendering="inherit" font-size="12" dy=".8em" y="750.5800018310547" x="252.5">}&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;</text><text id="kity_text_554" text-rendering="inherit" font-size="12" dy=".8em" y="768.5800018310547" x="252.5">function show(msg){&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;</text><text id="kity_text_555" text-rendering="inherit" font-size="12" dy=".8em" y="786.5800018310547" x="252.5">	alert(msg);&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;</text><text id="kity_text_556" text-rendering="inherit" font-size="12" dy=".8em" y="804.5800018310547" x="252.5">}</text></g></g><g id="minder_node59" opacity="1"><g id="node_expander58" style="cursor: pointer;" display="none"><path id="kity_path_563" fill="white" stroke="gray" d="M418.5,904.5A6,6,0,1,1,406.5,904.5A6,6,0,1,1,418.5,904.5"></path><path id="kity_path_564" fill="none" stroke="gray" d="M408,904.5L417,904.5"></path></g><path id="node_outline59" fill="none" stroke="none" d="M259.5,866.5h142a5,5,0,0,1,5,5v66a5,5,0,0,1,-5,5h-142a5,5,0,0,1,-5,-5v-66a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text59" fill="black"><text id="kity_text_560" text-rendering="inherit" font-size="12" dy=".8em" y="869.5800018310547" x="264.5">function getFunction(){</text><text id="kity_text_649" text-rendering="inherit" font-size="12" dy=".8em" y="887.5800018310547" x="264.5">	return function(){</text><text id="kity_text_650" text-rendering="inherit" font-size="12" dy=".8em" y="905.5800018310547" x="264.5">	&#xa0;&#xa0;&#xa0; alert(hello);</text><text id="kity_text_651" text-rendering="inherit" font-size="12" dy=".8em" y="923.5800018310547" x="264.5">}}&#xa0;&#xa0;&#xa0; </text></g></g><g id="kity_g_12" display="none"><path id="kity_path_13" fill="none" stroke="rgb(66, 94, 112)" d="M529.5,867.5h94a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-94a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="5"></path></g></g></g></svg>