<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2242" height="2310" style="background: rgb(251, 251, 251) none repeat scroll 0% 0%; visibility: visible;" viewBox="0 0 2242 2310"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="geometricPrecision"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1220.5,910.5A174,436,0,0,1,1394.5,474.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1521.5,474.5C1536.5,474.5,1536.5,254.5,1551.5,254.5L1628.5,254.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1521.5,474.5C1536.5,474.5,1536.5,306.5,1551.5,306.5L1628.5,306.5"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1521.5,474.5C1536.5,474.5,1536.5,722.5,1551.5,722.5L1615.5,722.5"></path><path id="kity_path_63" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,358.5,1645.5,358.5L1896.5,358.5"></path><path id="kity_path_71" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,410.5,1645.5,410.5L1860.5,410.5"></path><path id="kity_path_79" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,462.5,1645.5,462.5L1933.5,462.5"></path><path id="kity_path_87" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,514.5,1645.5,514.5L1921.5,514.5"></path><path id="kity_path_95" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,566.5,1645.5,566.5L2222.5,566.5"></path><path id="kity_path_103" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,618.5,1645.5,618.5L2163.5,618.5"></path><path id="kity_path_111" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,670.5,1645.5,670.5L1998.5,670.5"></path><path id="kity_path_119" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,722.5,1645.5,722.5L1948.5,722.5"></path><path id="kity_path_127" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,774.5,1645.5,774.5L2123.5,774.5"></path><path id="kity_path_135" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,878.5,1645.5,878.5L1792.5,878.5"></path><path id="kity_path_173" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,982.5,1645.5,982.5L1963.5,982.5"></path><path id="kity_path_180" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1792.5,878.5C1807.5,878.5,1807.5,826.5,1822.5,826.5L1969.5,826.5"></path><path id="kity_path_181" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1792.5,878.5C1807.5,878.5,1807.5,878.5,1822.5,878.5L1995.5,878.5"></path><path id="kity_path_182" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1792.5,878.5C1807.5,878.5,1807.5,930.5,1822.5,930.5L1980.5,930.5"></path><path id="kity_path_184" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,1034.5,1645.5,1034.5L1891.5,1034.5"></path><path id="kity_path_192" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1615.5,722.5C1630.5,722.5,1630.5,1086.5,1645.5,1086.5L1832.5,1086.5"></path><path id="kity_path_200" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1220.5,910.5A174,436,0,0,0,1394.5,1346.5"></path><path id="kity_path_208" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1499.5,1346.5C1514.5,1346.5,1514.5,1263.5,1529.5,1263.5L1607.5,1263.5"></path><path id="kity_path_216" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1607.5,1263.5C1622.5,1263.5,1622.5,1166.5,1637.5,1166.5L1715.5,1166.5"></path><path id="kity_path_224" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1715.5,1166.5C1730.5,1166.5,1730.5,1184.5,1745.5,1184.5L1987.5,1184.5"></path><path id="kity_path_234" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1607.5,1263.5C1622.5,1263.5,1622.5,1272.5,1637.5,1272.5L1835.5,1272.5"></path><path id="kity_path_253" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1835.5,1272.5C1850.5,1272.5,1850.5,1308.5,1865.5,1308.5L2192.5,1308.5"></path><path id="kity_path_255" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1607.5,1263.5C1622.5,1263.5,1622.5,1360.5,1637.5,1360.5L1703.5,1360.5"></path><path id="kity_path_271" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1703.5,1360.5C1718.5,1360.5,1718.5,1360.5,1733.5,1360.5L2035.5,1360.5"></path><path id="kity_path_273" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1499.5,1346.5C1514.5,1346.5,1514.5,1457.5,1529.5,1457.5L1607.5,1457.5"></path><path id="kity_path_281" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1607.5,1457.5C1622.5,1457.5,1622.5,1502.5,1637.5,1502.5L1901.5,1502.5"></path><path id="kity_path_294" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1220.5,910.5A174,658,0,0,0,1046.5,252.5"></path><path id="kity_path_455" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1220.5,910.5A174,658,0,0,1,1046.5,1568.5"></path><path id="kity_path_463" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M926.5,1568.5C911.5,1568.5,911.5,966.5,896.5,966.5L842.5,966.5"></path><path id="kity_path_471" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M842.5,966.5C827.5,966.5,827.5,940.5,812.5,940.5L724.5,940.5"></path><path id="kity_path_479" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M724.5,940.5C709.5,940.5,709.5,940.5,694.5,940.5L391.5,940.5"></path><path id="kity_path_487" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M842.5,966.5C827.5,966.5,827.5,992.5,812.5,992.5L712.5,992.5"></path><path id="kity_path_495" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M712.5,992.5C697.5,992.5,697.5,992.5,682.5,992.5L464.5,992.5"></path><path id="kity_path_503" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M926.5,1568.5C911.5,1568.5,911.5,1062.5,896.5,1062.5L830.5,1062.5"></path><path id="kity_path_511" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M830.5,1062.5C815.5,1062.5,815.5,1080.5,800.5,1080.5L677.5,1080.5"></path><path id="kity_path_521" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M926.5,1568.5C911.5,1568.5,911.5,1241.5,896.5,1241.5L842.5,1241.5"></path><path id="kity_path_529" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M842.5,1241.5C827.5,1241.5,827.5,1158.5,812.5,1158.5L717.5,1158.5"></path><path id="kity_path_537" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M717.5,1158.5C702.5,1158.5,702.5,1132.5,687.5,1132.5L319.5,1132.5"></path><path id="kity_path_545" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M717.5,1158.5C702.5,1158.5,702.5,1184.5,687.5,1184.5L477.5,1184.5"></path><path id="kity_path_553" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M842.5,1241.5C827.5,1241.5,827.5,1236.5,812.5,1236.5L729.5,1236.5"></path><path id="kity_path_561" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M729.5,1236.5C714.5,1236.5,714.5,1236.5,699.5,1236.5L501.5,1236.5"></path><path id="kity_path_569" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M842.5,1241.5C827.5,1241.5,827.5,1324.5,812.5,1324.5L549.5,1324.5"></path><path id="kity_path_579" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M926.5,1568.5C911.5,1568.5,911.5,1716.5,896.5,1716.5L842.5,1716.5"></path><path id="kity_path_667" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M842.5,1716.5C827.5,1716.5,827.5,1448.5,812.5,1448.5L746.5,1448.5"></path><path id="kity_path_675" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M746.5,1448.5C731.5,1448.5,731.5,1520.5,716.5,1520.5L224.5,1520.5"></path><path id="kity_path_691" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M842.5,1716.5C827.5,1716.5,827.5,1626.5,812.5,1626.5L758.5,1626.5"></path><path id="kity_path_699" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M758.5,1626.5C743.5,1626.5,743.5,1680.5,728.5,1680.5L445.5,1680.5"></path><path id="kity_path_713" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M842.5,1716.5C827.5,1716.5,827.5,1758.5,812.5,1758.5L734.5,1758.5"></path><path id="kity_path_721" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M734.5,1758.5C719.5,1758.5,719.5,1732.5,704.5,1732.5L650.5,1732.5"></path><path id="kity_path_729" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M734.5,1758.5C719.5,1758.5,719.5,1784.5,704.5,1784.5L638.5,1784.5"></path><path id="kity_path_737" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M650.5,1732.5C635.5,1732.5,635.5,1732.5,620.5,1732.5L410.5,1732.5"></path><path id="kity_path_745" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M638.5,1784.5C623.5,1784.5,623.5,1784.5,608.5,1784.5L386.5,1784.5"></path><path id="kity_path_753" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M842.5,1716.5C827.5,1716.5,827.5,1836.5,812.5,1836.5L758.5,1836.5"></path><path id="kity_path_761" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M758.5,1836.5C743.5,1836.5,743.5,1836.5,728.5,1836.5L469.5,1836.5"></path><path id="kity_path_769" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M842.5,1716.5C827.5,1716.5,827.5,1888.5,812.5,1888.5L758.5,1888.5"></path><path id="kity_path_777" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M758.5,1888.5C743.5,1888.5,743.5,1888.5,728.5,1888.5L654.5,1888.5"></path><path id="kity_path_785" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M842.5,1716.5C827.5,1716.5,827.5,1985.5,812.5,1985.5L710.5,1985.5"></path><path id="kity_path_793" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M710.5,1985.5C695.5,1985.5,695.5,2030.5,680.5,2030.5L20.5,2030.5"></path><path id="kity_path_806" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M926.5,1568.5C911.5,1568.5,911.5,2199.5,896.5,2199.5L796.5,2199.5"></path><path id="kity_path_814" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M796.5,2199.5C781.5,2199.5,781.5,2108.5,766.5,2108.5L691.5,2108.5"></path><path id="kity_path_822" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M691.5,2108.5C676.5,2108.5,676.5,2082.5,661.5,2082.5L144.5,2082.5"></path><path id="kity_path_886" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M691.5,2108.5C676.5,2108.5,676.5,2134.5,661.5,2134.5L163.5,2134.5"></path><path id="kity_path_894" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M796.5,2199.5C781.5,2199.5,781.5,2186.5,766.5,2186.5L686.5,2186.5"></path><path id="kity_path_902" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M686.5,2186.5C671.5,2186.5,671.5,2186.5,656.5,2186.5L170.5,2186.5"></path><path id="kity_path_910" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M796.5,2199.5C781.5,2199.5,781.5,2238.5,766.5,2238.5L704.5,2238.5"></path><path id="kity_path_918" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M796.5,2199.5C781.5,2199.5,781.5,2290.5,766.5,2290.5L692.5,2290.5"></path><path id="kity_path_926" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M692.5,2290.5C677.5,2290.5,677.5,2290.5,662.5,2290.5L72.5,2290.5"></path><path id="kity_path_933" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,45.5C845.5,45.5,845.5,45.5,830.5,45.5L675.5,45.5"></path><path id="kity_path_934" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M944.5,252.5C929.5,252.5,929.5,45.5,914.5,45.5L860.5,45.5"></path><path id="kity_path_935" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,97.5,830.5,97.5L541.5,97.5"></path><path id="kity_path_936" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,149.5,830.5,149.5L606.5,149.5"></path><path id="kity_path_937" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,201.5,830.5,201.5L643.5,201.5"></path><path id="kity_path_938" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,253.5,830.5,253.5L548.5,253.5"></path><path id="kity_path_939" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,305.5,830.5,305.5L531.5,305.5"></path><path id="kity_path_940" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,357.5,830.5,357.5L539.5,357.5"></path><path id="kity_path_941" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,409.5,830.5,409.5L587.5,409.5"></path><path id="kity_path_942" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,461.5,830.5,461.5L540.5,461.5"></path><path id="kity_path_943" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,513.5,830.5,513.5L524.5,513.5"></path><path id="kity_path_944" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,565.5,830.5,565.5L366.5,565.5"></path><path id="kity_path_945" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,617.5,830.5,617.5L345.5,617.5"></path><path id="kity_path_946" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,669.5,830.5,669.5L462.5,669.5"></path><path id="kity_path_947" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,721.5,830.5,721.5L440.5,721.5"></path><path id="kity_path_948" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,773.5,830.5,773.5L596.5,773.5"></path><path id="kity_path_949" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,825.5,830.5,825.5L171.5,825.5"></path><path id="kity_path_950" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M860.5,487.5C845.5,487.5,845.5,877.5,830.5,877.5L557.5,877.5"></path><path id="kity_path_951" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M944.5,252.5C929.5,252.5,929.5,487.5,914.5,487.5L860.5,487.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(115, 161, 191)" d="M1169.5,890.5h102a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-102a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="899.939998626709" x="1188.5">内置对象</text></g></g><g id="kity_g_14" display="none"><path id="kity_path_15" fill="rgba(0, 92, 153, 0.5)" stroke="none" d="M1396.5,1364.5h103v20h-103z"></path><path id="kity_path_16" fill="none" stroke="rgb(0, 76, 128)" d="M1396.5,1364.5L1499.5,1364.5" stroke-width="1"></path></g><g id="minder_node2"><g id="node_expander1" style="cursor: pointer;"><path id="kity_path_36" fill="white" stroke="gray" d="M1395.5,474.5A6,6,0,1,1,1383.5,474.5A6,6,0,1,1,1395.5,474.5"></path><path id="kity_path_37" fill="none" stroke="gray" d="M1385,474.5L1394,474.5"></path></g><path id="node_outline2" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1399.5,461.5h119a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-119a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text2" fill="black"><text id="kity_text_33" text-rendering="inherit" font-size="14" dy=".8em" y="465.2599983215332" x="1416.5">基本包装类型</text></g></g><g id="minder_node3"><g id="node_expander2" style="cursor: pointer;" display="none"><path id="kity_path_44" fill="white" stroke="gray" d="M1561.5,240.5A6,6,0,1,1,1549.5,240.5A6,6,0,1,1,1561.5,240.5"></path><path id="kity_path_45" fill="none" stroke="gray"></path></g><path id="node_outline3" fill="none" stroke="none" d="M1566.5,229.5h57a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-57a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text3" fill="black"><text id="kity_text_41" text-rendering="inherit" font-size="12" dy=".8em" y="232.5800018310547" x="1571.5">Boolean</text></g></g><g id="minder_node4"><g id="node_expander3" style="cursor: pointer;" display="none"><path id="kity_path_52" fill="white" stroke="gray" d="M1561.5,292.5A6,6,0,1,1,1549.5,292.5A6,6,0,1,1,1561.5,292.5"></path><path id="kity_path_53" fill="none" stroke="gray"></path></g><path id="node_outline4" fill="none" stroke="none" d="M1566.5,281.5h57a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-57a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text4" fill="black"><text id="kity_text_49" text-rendering="inherit" font-size="12" dy=".8em" y="284.5800018310547" x="1571.5">Number</text></g></g><g id="minder_node5"><g id="node_expander4" style="cursor: pointer;"><path id="kity_path_60" fill="white" stroke="gray" d="M1561.5,708.5A6,6,0,1,1,1549.5,708.5A6,6,0,1,1,1561.5,708.5"></path><path id="kity_path_61" fill="none" stroke="gray" d="M1551,708.5L1560,708.5"></path></g><path id="node_outline5" fill="none" stroke="none" d="M1566.5,697.5h44a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-44a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text5" fill="black"><text id="kity_text_57" text-rendering="inherit" font-size="12" dy=".8em" y="700.5800018310547" x="1571.5">String</text></g></g><g id="minder_node6"><g id="node_expander5" style="cursor: pointer;" display="none"><path id="kity_path_68" fill="white" stroke="gray" d="M1655.5,344.5A6,6,0,1,1,1643.5,344.5A6,6,0,1,1,1655.5,344.5"></path><path id="kity_path_69" fill="none" stroke="gray"></path></g><path id="node_outline6" fill="none" stroke="none" d="M1660.5,333.5h231a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-231a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text6" fill="black"><text id="kity_text_65" text-rendering="inherit" font-size="12" dy=".8em" y="336.5800018310547" x="1665.5">length&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;属性，获取字符串的字符数量</text></g></g><g id="minder_node7"><g id="node_expander6" style="cursor: pointer;" display="none"><path id="kity_path_76" fill="white" stroke="gray" d="M1655.5,396.5A6,6,0,1,1,1643.5,396.5A6,6,0,1,1,1655.5,396.5"></path><path id="kity_path_77" fill="none" stroke="gray"></path></g><path id="node_outline7" fill="none" stroke="none" d="M1660.5,385.5h195a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-195a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text7" fill="black"><text id="kity_text_73" text-rendering="inherit" font-size="12" dy=".8em" y="388.5800018310547" x="1665.5">charAt(i)&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;返回给定位置的字符</text></g></g><g id="minder_node8"><g id="node_expander7" style="cursor: pointer;" display="none"><path id="kity_path_84" fill="white" stroke="gray" d="M1655.5,448.5A6,6,0,1,1,1643.5,448.5A6,6,0,1,1,1655.5,448.5"></path><path id="kity_path_85" fill="none" stroke="gray"></path></g><path id="node_outline8" fill="none" stroke="none" d="M1660.5,437.5h268a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-268a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text8" fill="black"><text id="kity_text_81" text-rendering="inherit" font-size="12" dy=".8em" y="440.5800018310547" x="1665.5">charCodeAt()&#xa0;&#xa0; &#xa0;返回给定位置的字符的字符编码</text></g></g><g id="minder_node9"><g id="node_expander8" style="cursor: pointer;" display="none"><path id="kity_path_92" fill="white" stroke="gray" d="M1655.5,500.5A6,6,0,1,1,1643.5,500.5A6,6,0,1,1,1655.5,500.5"></path><path id="kity_path_93" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M1660.5,489.5h256a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-256a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text9" fill="black"><text id="kity_text_89" text-rendering="inherit" font-size="12" dy=".8em" y="492.5800018310547" x="1665.5">indexOf()&#xa0; &#xa0;&#xa0;&#xa0;&#xa0; 从前往后查找指定字符所在位置</text></g></g><g id="minder_node10"><g id="node_expander9" style="cursor: pointer;" display="none"><path id="kity_path_100" fill="white" stroke="gray" d="M1655.5,552.5A6,6,0,1,1,1643.5,552.5A6,6,0,1,1,1655.5,552.5"></path><path id="kity_path_101" fill="none" stroke="gray"></path></g><path id="node_outline10" fill="none" stroke="none" d="M1660.5,541.5h557a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-557a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text10" fill="black"><text id="kity_text_97" text-rendering="inherit" font-size="12" dy=".8em" y="544.5800018310547" x="1665.5">lastIndexOf()&#xa0;&#xa0;&#xa0;&#xa0; 从后往前查找字符串所在位置，可以有第二个参数，代表从字符串中哪个位置开始查找</text></g></g><g id="minder_node11"><g id="node_expander10" style="cursor: pointer;" display="none"><path id="kity_path_108" fill="white" stroke="gray" d="M1655.5,604.5A6,6,0,1,1,1643.5,604.5A6,6,0,1,1,1655.5,604.5"></path><path id="kity_path_109" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M1660.5,593.5h498a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-498a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text11" fill="black"><text id="kity_text_105" text-rendering="inherit" font-size="12" dy=".8em" y="596.5800018310547" x="1665.5">concat()&#xa0;&#xa0;&#xa0; 将一个或多个字符串拼接起来，返回拼接得到的新字符串，但是大多使用"+"拼接</text></g></g><g id="minder_node12"><g id="node_expander11" style="cursor: pointer;" display="none"><path id="kity_path_116" fill="white" stroke="gray" d="M1655.5,656.5A6,6,0,1,1,1643.5,656.5A6,6,0,1,1,1655.5,656.5"></path><path id="kity_path_117" fill="none" stroke="gray"></path></g><path id="node_outline12" fill="none" stroke="none" d="M1660.5,645.5h333a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-333a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text12" fill="black"><text id="kity_text_113" text-rendering="inherit" font-size="12" dy=".8em" y="648.5800018310547" x="1665.5">slice()&#xa0;&#xa0; &#xa0;截取字符串（开始位置，返回字符后一个字符位置）</text></g></g><g id="minder_node13"><g id="node_expander12" style="cursor: pointer;" display="none"><path id="kity_path_124" fill="white" stroke="gray" d="M1655.5,708.5A6,6,0,1,1,1643.5,708.5A6,6,0,1,1,1655.5,708.5"></path><path id="kity_path_125" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M1660.5,697.5h283a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-283a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text13" fill="black"><text id="kity_text_121" text-rendering="inherit" font-size="12" dy=".8em" y="700.5800018310547" x="1665.5">substr()&#xa0;&#xa0; &#xa0;截取字符串（开始位置，返回字符个数）</text></g></g><g id="minder_node14"><g id="node_expander13" style="cursor: pointer;" display="none"><path id="kity_path_132" fill="white" stroke="gray" d="M1655.5,760.5A6,6,0,1,1,1643.5,760.5A6,6,0,1,1,1655.5,760.5"></path><path id="kity_path_133" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="none" stroke="none" d="M1660.5,749.5h458a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-458a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text14" fill="black"><text id="kity_text_129" text-rendering="inherit" font-size="12" dy=".8em" y="752.5800018310547" x="1665.5">substring()&#xa0;&#xa0; &#xa0;截取字符串（开始位置，返回字符后一个字符位置，不改变原值大小）</text></g></g><g id="minder_node15" opacity="1"><g id="node_expander14" style="cursor: pointer;"><path id="kity_path_140" fill="white" stroke="gray" d="M1655.5,864.5A6,6,0,1,1,1643.5,864.5A6,6,0,1,1,1655.5,864.5"></path><path id="kity_path_141" fill="none" stroke="gray" d="M1645,864.5L1654,864.5"></path></g><path id="node_outline15" fill="none" stroke="none" d="M1660.5,853.5h127a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-127a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text15" fill="black"><text id="kity_text_137" text-rendering="inherit" font-size="12" dy=".8em" y="856.5800018310547" x="1665.5">var s = "helloworld";</text></g></g><g id="minder_node19"><g id="node_expander18" style="cursor: pointer;" display="none"><path id="kity_path_178" fill="white" stroke="gray" d="M1655.5,968.5A6,6,0,1,1,1643.5,968.5A6,6,0,1,1,1655.5,968.5"></path><path id="kity_path_179" fill="none" stroke="gray"></path></g><path id="node_outline19" fill="none" stroke="none" d="M1660.5,957.5h298a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-298a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text19" fill="black"><text id="kity_text_175" text-rendering="inherit" font-size="12" dy=".8em" y="960.5800018310547" x="1665.5">trim()&#xa0;&#xa0; &#xa0;&#xa0;&#xa0;&#xa0; 删除前置以及后置中的所有空格，返回结果</text></g></g><g id="minder_node16"><g id="node_expander15" style="cursor: pointer;" display="none"><path id="kity_path_161" fill="white" stroke="gray" d="M1832.5,812.5A6,6,0,1,1,1820.5,812.5A6,6,0,1,1,1832.5,812.5"></path><path id="kity_path_162" fill="none" stroke="gray"></path></g><path id="node_outline16" fill="none" stroke="none" d="M1837.5,801.5h127a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-127a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_152" text-rendering="inherit" font-size="12" dy=".8em" y="804.5800018310547" x="1842.5">s.slice(3,7);&#xa0;&#xa0; &#xa0; //lowo</text></g></g><g id="minder_node17"><g id="node_expander16" style="cursor: pointer;" display="none"><path id="kity_path_164" fill="white" stroke="gray" d="M1832.5,864.5A6,6,0,1,1,1820.5,864.5A6,6,0,1,1,1832.5,864.5"></path><path id="kity_path_165" fill="none" stroke="gray"></path></g><path id="node_outline17" fill="none" stroke="none" d="M1837.5,853.5h153a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-153a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text17" fill="black"><text id="kity_text_154" text-rendering="inherit" font-size="12" dy=".8em" y="856.5800018310547" x="1842.5">s.substr(3,7);&#xa0;&#xa0; &#xa0; //loworld</text></g></g><g id="minder_node18"><g id="node_expander17" style="cursor: pointer;" display="none"><path id="kity_path_167" fill="white" stroke="gray" d="M1832.5,916.5A6,6,0,1,1,1820.5,916.5A6,6,0,1,1,1832.5,916.5"></path><path id="kity_path_168" fill="none" stroke="gray"></path></g><path id="node_outline18" fill="none" stroke="none" d="M1837.5,905.5h138a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-138a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text18" fill="black"><text id="kity_text_156" text-rendering="inherit" font-size="12" dy=".8em" y="908.5800018310547" x="1842.5">s.substring(3,7);//lowo</text></g></g><g id="minder_node20"><g id="node_expander19" style="cursor: pointer;" display="none"><path id="kity_path_189" fill="white" stroke="gray" d="M1655.5,1020.5A6,6,0,1,1,1643.5,1020.5A6,6,0,1,1,1655.5,1020.5"></path><path id="kity_path_190" fill="none" stroke="gray"></path></g><path id="node_outline20" fill="none" stroke="none" d="M1660.5,1009.5h226a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-226a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text20" fill="black"><text id="kity_text_186" text-rendering="inherit" font-size="12" dy=".8em" y="1012.5800018310547" x="1665.5">toLowerCase()&#xa0;&#xa0;&#xa0; 转换为小写（过滤器）</text></g></g><g id="minder_node21"><g id="node_expander20" style="cursor: pointer;" display="none"><path id="kity_path_197" fill="white" stroke="gray" d="M1655.5,1072.5A6,6,0,1,1,1643.5,1072.5A6,6,0,1,1,1655.5,1072.5"></path><path id="kity_path_198" fill="none" stroke="gray"></path></g><path id="node_outline21" fill="none" stroke="none" d="M1660.5,1061.5h167a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-167a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text21" fill="black"><text id="kity_text_194" text-rendering="inherit" font-size="12" dy=".8em" y="1064.5800018310547" x="1665.5">toUpperCase()&#xa0;&#xa0;&#xa0; 转换为大写</text></g></g><g id="minder_node22"><g id="node_expander21" style="cursor: pointer;"><path id="kity_path_205" fill="white" stroke="gray" d="M1395.5,1346.5A6,6,0,1,1,1383.5,1346.5A6,6,0,1,1,1395.5,1346.5"></path><path id="kity_path_206" fill="none" stroke="gray" d="M1385,1346.5L1394,1346.5"></path></g><path id="node_outline22" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1399.5,1333.5h97a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-97a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text22" fill="black"><text id="kity_text_202" text-rendering="inherit" font-size="14" dy=".8em" y="1337.2599983215332" x="1416.5">Math类型</text></g></g><g id="minder_node23"><g id="node_expander22" style="cursor: pointer;"><path id="kity_path_213" fill="white" stroke="gray" d="M1539.5,1249.5A6,6,0,1,1,1527.5,1249.5A6,6,0,1,1,1539.5,1249.5"></path><path id="kity_path_214" fill="none" stroke="gray" d="M1529,1249.5L1538,1249.5"></path></g><path id="node_outline23" fill="none" stroke="none" d="M1544.5,1238.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text23" fill="black"><text id="kity_text_210" text-rendering="inherit" font-size="12" dy=".8em" y="1241.5800018310547" x="1549.5">常用方法</text></g></g><g id="minder_node24"><g id="node_expander23" style="cursor: pointer;"><path id="kity_path_221" fill="white" stroke="gray" d="M1647.5,1152.5A6,6,0,1,1,1635.5,1152.5A6,6,0,1,1,1647.5,1152.5"></path><path id="kity_path_222" fill="none" stroke="gray" d="M1637,1152.5L1646,1152.5"></path></g><path id="node_outline24" fill="none" stroke="none" d="M1652.5,1141.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text24" fill="black"><text id="kity_text_218" text-rendering="inherit" font-size="12" dy=".8em" y="1144.5800018310547" x="1657.5">比较方法</text></g></g><g id="minder_node25" opacity="1"><g id="node_expander24" style="cursor: pointer;" display="none"><path id="kity_path_229" fill="white" stroke="gray" d="M1755.5,1152.5A6,6,0,1,1,1743.5,1152.5A6,6,0,1,1,1755.5,1152.5"></path><path id="kity_path_230" fill="none" stroke="gray"></path></g><path id="node_outline25" fill="none" stroke="none" d="M1760.5,1123.5h222a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-222a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text25" fill="black"><text id="kity_text_226" text-rendering="inherit" font-size="12" dy=".8em" y="1126.5800018310547" x="1765.5">Math.min()&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;//求一组数中的最小值</text><text id="kity_text_231" text-rendering="inherit" font-size="12" dy=".8em" y="1144.5800018310547" x="1765.5">Math.max()&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;//求一组数中的最大值</text><text id="kity_text_232" text-rendering="inherit" font-size="12" dy=".8em" y="1162.5800018310547" x="1765.5">Math.min(1,2,19,8,6);&#xa0;&#xa0; &#xa0;//1</text></g></g><g id="minder_node26" opacity="1"><g id="node_expander25" style="cursor: pointer;"><path id="kity_path_239" fill="white" stroke="gray" d="M1647.5,1258.5A6,6,0,1,1,1635.5,1258.5A6,6,0,1,1,1647.5,1258.5"></path><path id="kity_path_240" fill="none" stroke="gray" d="M1637,1258.5L1646,1258.5"></path></g><path id="node_outline26" fill="none" stroke="none" d="M1652.5,1247.5h178a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-178a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text26" fill="black"><text id="kity_text_236" text-rendering="inherit" font-size="12" dy=".8em" y="1250.5800018310547" x="1657.5">将小数值舍入为整数的几个方法</text></g></g><g id="minder_node27" opacity="1"><g id="node_expander26" style="cursor: pointer;" display="none"><path id="kity_path_247" fill="white" stroke="gray" d="M1875.5,1258.5A6,6,0,1,1,1863.5,1258.5A6,6,0,1,1,1875.5,1258.5"></path><path id="kity_path_248" fill="none" stroke="gray"></path></g><path id="node_outline27" fill="none" stroke="none" d="M1880.5,1211.5h307a5,5,0,0,1,5,5v84a5,5,0,0,1,-5,5h-307a5,5,0,0,1,-5,-5v-84a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text27" fill="black"><text id="kity_text_244" text-rendering="inherit" font-size="12" dy=".8em" y="1214.5800018310547" x="1885.5">Math.ceil()&#xa0; 向上舍入</text><text id="kity_text_249" text-rendering="inherit" font-size="12" dy=".8em" y="1232.5800018310547" x="1885.5">Math.floor() 向下舍入</text><text id="kity_text_250" text-rendering="inherit" font-size="12" dy=".8em" y="1250.5800018310547" x="1885.5">Math.round() 四舍五入</text><text id="kity_text_251" text-rendering="inherit" font-size="12" dy=".8em" y="1268.5800018310547" x="1885.5">	Math.ceil(12.41);&#xa0;&#xa0; &#xa0;//13&#xa0;&#xa0; &#xa0;Math.floor(12.41);&#xa0;&#xa0; &#xa0;//12</text><text id="kity_text_252" text-rendering="inherit" font-size="12" dy=".8em" y="1286.5800018310547" x="1885.5">	Math.round(12.3);&#xa0;&#xa0; &#xa0;//12&#xa0;&#xa0; &#xa0;Math.round(12.5);&#xa0;&#xa0; &#xa0;//13</text></g></g><g id="minder_node28" opacity="1"><g id="node_expander27" style="cursor: pointer;"><path id="kity_path_260" fill="white" stroke="gray" d="M1647.5,1346.5A6,6,0,1,1,1635.5,1346.5A6,6,0,1,1,1647.5,1346.5"></path><path id="kity_path_261" fill="none" stroke="gray" d="M1637,1346.5L1646,1346.5"></path></g><path id="node_outline28" fill="none" stroke="none" d="M1652.5,1335.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text28" fill="black"><text id="kity_text_257" text-rendering="inherit" font-size="12" dy=".8em" y="1338.5800018310547" x="1657.5">随机数</text></g></g><g id="minder_node29"><g id="node_expander28" style="cursor: pointer;" display="none"><path id="kity_path_269" fill="white" stroke="gray" d="M1743.5,1346.5A6,6,0,1,1,1731.5,1346.5A6,6,0,1,1,1743.5,1346.5"></path><path id="kity_path_270" fill="none" stroke="gray"></path></g><path id="node_outline29" fill="none" stroke="none" d="M1748.5,1335.5h282a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-282a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text29" fill="black"><text id="kity_text_266" text-rendering="inherit" font-size="12" dy=".8em" y="1338.5800018310547" x="1753.5">Math.random() &#xa0;&#xa0; &#xa0;//返回大于0小于1的一个随机数</text></g></g><g id="minder_node30"><g id="node_expander29" style="cursor: pointer;"><path id="kity_path_278" fill="white" stroke="gray" d="M1539.5,1443.5A6,6,0,1,1,1527.5,1443.5A6,6,0,1,1,1539.5,1443.5"></path><path id="kity_path_279" fill="none" stroke="gray" d="M1529,1443.5L1538,1443.5"></path></g><path id="node_outline30" fill="none" stroke="none" d="M1544.5,1432.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text30" fill="black"><text id="kity_text_275" text-rendering="inherit" font-size="12" dy=".8em" y="1435.5800018310547" x="1549.5">其他方法</text></g></g><g id="minder_node31" opacity="1"><g id="node_expander30" style="cursor: pointer;" display="none"><path id="kity_path_286" fill="white" stroke="gray" d="M1647.5,1443.5A6,6,0,1,1,1635.5,1443.5A6,6,0,1,1,1647.5,1443.5"></path><path id="kity_path_287" fill="none" stroke="gray"></path></g><path id="node_outline31" fill="none" stroke="none" d="M1652.5,1387.5h244a5,5,0,0,1,5,5v102a5,5,0,0,1,-5,5h-244a5,5,0,0,1,-5,-5v-102a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text31" fill="black"><text id="kity_text_283" text-rendering="inherit" font-size="12" dy=".8em" y="1390.5800018310547" x="1657.5">abs(num)&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;返回num绝对值</text><text id="kity_text_288" text-rendering="inherit" font-size="12" dy=".8em" y="1408.5800018310547" x="1657.5">exp(num)&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;返回Math.E的num次幂</text><text id="kity_text_289" text-rendering="inherit" font-size="12" dy=".8em" y="1426.5800018310547" x="1657.5">log(num)&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;返回num的自然对数</text><text id="kity_text_290" text-rendering="inherit" font-size="12" dy=".8em" y="1444.5800018310547" x="1657.5">pow(num,power)&#xa0;&#xa0; &#xa0;返回num的power次幂</text><text id="kity_text_291" text-rendering="inherit" font-size="12" dy=".8em" y="1462.5800018310547" x="1657.5">sqrt(num)&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;返回num的平方根</text><text id="kity_text_292" text-rendering="inherit" font-size="12" dy=".8em" y="1480.5800018310547" x="1657.5">...</text></g></g><g id="minder_node32" opacity="1"><g id="node_expander31" style="cursor: pointer;"><path id="kity_path_299" fill="white" stroke="gray" d="M1057.5,252.5A6,6,0,1,1,1045.5,252.5A6,6,0,1,1,1057.5,252.5"></path><path id="kity_path_300" fill="none" stroke="gray" d="M1047,252.5L1056,252.5"></path></g><path id="node_outline32" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M947.5,239.5h94a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-94a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text32" fill="black"><text id="kity_text_296" text-rendering="inherit" font-size="14" dy=".8em" y="243.2599983215332" x="964.5">Date类型</text></g></g><g id="minder_node52"><g id="node_expander51" style="cursor: pointer;"><path id="kity_path_460" fill="white" stroke="gray" d="M1057.5,1568.5A6,6,0,1,1,1045.5,1568.5A6,6,0,1,1,1057.5,1568.5"></path><path id="kity_path_461" fill="none" stroke="gray" d="M1047,1568.5L1056,1568.5"></path></g><path id="node_outline52" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M929.5,1555.5h112a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-112a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text52" fill="black"><text id="kity_text_457" text-rendering="inherit" font-size="14" dy=".8em" y="1559.2599983215332" x="946.5">RegExp类型</text></g></g><g id="minder_node53"><g id="node_expander52" style="cursor: pointer;"><path id="kity_path_468" fill="white" stroke="gray" d="M898.5,952.5A6,6,0,1,1,886.5,952.5A6,6,0,1,1,898.5,952.5"></path><path id="kity_path_469" fill="none" stroke="gray" d="M888,952.5L897,952.5"></path></g><path id="node_outline53" fill="none" stroke="none" d="M847.5,941.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text53" fill="black"><text id="kity_text_465" text-rendering="inherit" font-size="12" dy=".8em" y="944.5800018310547" x="852.5">创建</text></g></g><g id="minder_node54"><g id="node_expander53" style="cursor: pointer;"><path id="kity_path_476" fill="white" stroke="gray" d="M814.5,926.5A6,6,0,1,1,802.5,926.5A6,6,0,1,1,814.5,926.5"></path><path id="kity_path_477" fill="none" stroke="gray" d="M804,926.5L813,926.5"></path></g><path id="node_outline54" fill="none" stroke="none" d="M729.5,915.5h68a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-68a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text54" fill="black"><text id="kity_text_473" text-rendering="inherit" font-size="12" dy=".8em" y="918.5800018310547" x="734.5">1.构造函数</text></g></g><g id="minder_node55"><g id="node_expander54" style="cursor: pointer;" display="none"><path id="kity_path_484" fill="white" stroke="gray" d="M696.5,926.5A6,6,0,1,1,684.5,926.5A6,6,0,1,1,696.5,926.5"></path><path id="kity_path_485" fill="none" stroke="gray"></path></g><path id="node_outline55" fill="none" stroke="none" d="M396.5,915.5h283a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-283a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text55" fill="black"><text id="kity_text_481" text-rendering="inherit" font-size="12" dy=".8em" y="918.5800018310547" x="401.5">var pattern =new RegExp("正则表达式","修饰符")</text></g></g><g id="minder_node56"><g id="node_expander55" style="cursor: pointer;"><path id="kity_path_492" fill="white" stroke="gray" d="M814.5,978.5A6,6,0,1,1,802.5,978.5A6,6,0,1,1,814.5,978.5"></path><path id="kity_path_493" fill="none" stroke="gray" d="M804,978.5L813,978.5"></path></g><path id="node_outline56" fill="none" stroke="none" d="M717.5,967.5h80a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-80a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text56" fill="black"><text id="kity_text_489" text-rendering="inherit" font-size="12" dy=".8em" y="970.5800018310547" x="722.5">2.字面量创建</text></g></g><g id="minder_node57"><g id="node_expander56" style="cursor: pointer;" display="none"><path id="kity_path_500" fill="white" stroke="gray" d="M684.5,978.5A6,6,0,1,1,672.5,978.5A6,6,0,1,1,684.5,978.5"></path><path id="kity_path_501" fill="none" stroke="gray"></path></g><path id="node_outline57" fill="none" stroke="none" d="M469.5,967.5h198a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-198a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text57" fill="black"><text id="kity_text_497" text-rendering="inherit" font-size="12" dy=".8em" y="970.5800018310547" x="474.5">var pattern = /正则表达式/修饰符;</text></g></g><g id="minder_node58"><g id="node_expander57" style="cursor: pointer;"><path id="kity_path_508" fill="white" stroke="gray" d="M898.5,1048.5A6,6,0,1,1,886.5,1048.5A6,6,0,1,1,898.5,1048.5"></path><path id="kity_path_509" fill="none" stroke="gray" d="M888,1048.5L897,1048.5"></path></g><path id="node_outline58" fill="none" stroke="none" d="M835.5,1037.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text58" fill="black"><text id="kity_text_505" text-rendering="inherit" font-size="12" dy=".8em" y="1040.5800018310547" x="840.5">修饰符</text></g></g><g id="minder_node59" opacity="1"><g id="node_expander58" style="cursor: pointer;" display="none"><path id="kity_path_516" fill="white" stroke="gray" d="M802.5,1048.5A6,6,0,1,1,790.5,1048.5A6,6,0,1,1,802.5,1048.5"></path><path id="kity_path_517" fill="none" stroke="gray"></path></g><path id="node_outline59" fill="none" stroke="none" d="M682.5,1019.5h103a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-103a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text59" fill="black"><text id="kity_text_513" text-rendering="inherit" font-size="12" dy=".8em" y="1022.5800018310547" x="687.5">i&#xa0;&#xa0;&#xa0;&#xa0; 不区分大小写</text><text id="kity_text_518" text-rendering="inherit" font-size="12" dy=".8em" y="1040.5800018310547" x="687.5">g&#xa0;&#xa0;&#xa0; 全局</text><text id="kity_text_519" text-rendering="inherit" font-size="12" dy=".8em" y="1058.5800018310547" x="687.5">m&#xa0;&#xa0; 多行</text></g></g><g id="minder_node60"><g id="node_expander59" style="cursor: pointer;"><path id="kity_path_526" fill="white" stroke="gray" d="M898.5,1227.5A6,6,0,1,1,886.5,1227.5A6,6,0,1,1,898.5,1227.5"></path><path id="kity_path_527" fill="none" stroke="gray" d="M888,1227.5L897,1227.5"></path></g><path id="node_outline60" fill="none" stroke="none" d="M847.5,1216.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text60" fill="black"><text id="kity_text_523" text-rendering="inherit" font-size="12" dy=".8em" y="1219.5800018310547" x="852.5">方法</text></g></g><g id="minder_node61"><g id="node_expander60" style="cursor: pointer;"><path id="kity_path_534" fill="white" stroke="gray" d="M814.5,1144.5A6,6,0,1,1,802.5,1144.5A6,6,0,1,1,814.5,1144.5"></path><path id="kity_path_535" fill="none" stroke="gray" d="M804,1144.5L813,1144.5"></path></g><path id="node_outline61" fill="none" stroke="none" d="M722.5,1133.5h75a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-75a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text61" fill="black"><text id="kity_text_531" text-rendering="inherit" font-size="12" dy=".8em" y="1136.5800018310547" x="727.5">exec()&#xa0; 查找</text></g></g><g id="minder_node62"><g id="node_expander61" style="cursor: pointer;" display="none"><path id="kity_path_542" fill="white" stroke="gray" d="M689.5,1118.5A6,6,0,1,1,677.5,1118.5A6,6,0,1,1,689.5,1118.5"></path><path id="kity_path_543" fill="none" stroke="gray"></path></g><path id="node_outline62" fill="none" stroke="none" d="M324.5,1107.5h348a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-348a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text62" fill="black"><text id="kity_text_539" text-rendering="inherit" font-size="12" dy=".8em" y="1110.5800018310547" x="329.5">var pattern = new RegExp("abc");var result = pattern.exec()</text></g></g><g id="minder_node63"><g id="node_expander62" style="cursor: pointer;" display="none"><path id="kity_path_550" fill="white" stroke="gray" d="M689.5,1170.5A6,6,0,1,1,677.5,1170.5A6,6,0,1,1,689.5,1170.5"></path><path id="kity_path_551" fill="none" stroke="gray"></path></g><path id="node_outline63" fill="none" stroke="none" d="M482.5,1159.5h190a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-190a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text63" fill="black"><text id="kity_text_547" text-rendering="inherit" font-size="12" dy=".8em" y="1162.5800018310547" x="487.5">执行正则，从参数获取目的字符串</text></g></g><g id="minder_node64"><g id="node_expander63" style="cursor: pointer;"><path id="kity_path_558" fill="white" stroke="gray" d="M814.5,1222.5A6,6,0,1,1,802.5,1222.5A6,6,0,1,1,814.5,1222.5"></path><path id="kity_path_559" fill="none" stroke="gray" d="M804,1222.5L813,1222.5"></path></g><path id="node_outline64" fill="none" stroke="none" d="M734.5,1211.5h63a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-63a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text64" fill="black"><text id="kity_text_555" text-rendering="inherit" font-size="12" dy=".8em" y="1214.5800018310547" x="739.5">test()测试</text></g></g><g id="minder_node65"><g id="node_expander64" style="cursor: pointer;" display="none"><path id="kity_path_566" fill="white" stroke="gray" d="M701.5,1222.5A6,6,0,1,1,689.5,1222.5A6,6,0,1,1,701.5,1222.5"></path><path id="kity_path_567" fill="none" stroke="gray"></path></g><path id="node_outline65" fill="none" stroke="none" d="M506.5,1211.5h178a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-178a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text65" fill="black"><text id="kity_text_563" text-rendering="inherit" font-size="12" dy=".8em" y="1214.5800018310547" x="511.5">参数是一个字符串，返回布尔值</text></g></g><g id="minder_node66" opacity="1"><g id="node_expander65" style="cursor: pointer;" display="none"><path id="kity_path_574" fill="white" stroke="gray" d="M814.5,1292.5A6,6,0,1,1,802.5,1292.5A6,6,0,1,1,814.5,1292.5"></path><path id="kity_path_575" fill="none" stroke="gray"></path></g><path id="node_outline66" fill="none" stroke="none" d="M554.5,1263.5h243a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-243a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text66" fill="black"><text id="kity_text_571" text-rendering="inherit" font-size="12" dy=".8em" y="1266.5800018310547" x="559.5">pattern.toString();&#xa0;&#xa0; &#xa0;转换为字符串</text><text id="kity_text_576" text-rendering="inherit" font-size="12" dy=".8em" y="1284.5800018310547" x="559.5">pattern.lastIndex;&#xa0;&#xa0; &#xa0;下一次匹配的开始位置</text><text id="kity_text_577" text-rendering="inherit" font-size="12" dy=".8em" y="1302.5800018310547" x="559.5">pattern.source;&#xa0;&#xa0; &#xa0;正则表达式文本</text></g></g><g id="minder_node67"><g id="node_expander66" style="cursor: pointer;"><path id="kity_path_584" fill="white" stroke="gray" d="M898.5,1702.5A6,6,0,1,1,886.5,1702.5A6,6,0,1,1,898.5,1702.5"></path><path id="kity_path_585" fill="none" stroke="gray" d="M888,1702.5L897,1702.5"></path></g><path id="node_outline67" fill="none" stroke="none" d="M847.5,1691.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text67" fill="black"><text id="kity_text_581" text-rendering="inherit" font-size="12" dy=".8em" y="1694.5800018310547" x="852.5">语法</text></g></g><g id="minder_node76"><g id="node_expander75" style="cursor: pointer;"><path id="kity_path_672" fill="white" stroke="gray" d="M814.5,1434.5A6,6,0,1,1,802.5,1434.5A6,6,0,1,1,814.5,1434.5"></path><path id="kity_path_673" fill="none" stroke="gray" d="M804,1434.5L813,1434.5"></path></g><path id="node_outline76" fill="none" stroke="none" d="M751.5,1423.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text76" fill="black"><text id="kity_text_669" text-rendering="inherit" font-size="12" dy=".8em" y="1426.5800018310547" x="756.5">字符类</text></g></g><g id="minder_node77" opacity="1"><g id="node_expander76" style="cursor: pointer;" display="none"><path id="kity_path_680" fill="white" stroke="gray" d="M718.5,1434.5A6,6,0,1,1,706.5,1434.5A6,6,0,1,1,718.5,1434.5"></path><path id="kity_path_681" fill="none" stroke="gray"></path></g><path id="node_outline77" fill="none" stroke="none" d="M229.5,1351.5h472a5,5,0,0,1,5,5v156a5,5,0,0,1,-5,5h-472a5,5,0,0,1,-5,-5v-156a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text77" fill="black"><text id="kity_text_677" text-rendering="inherit" font-size="12" dy=".8em" y="1354.5800018310547" x="234.5">[...]&#xa0;&#xa0; &#xa0;方括号内的任意字符</text><text id="kity_text_682" text-rendering="inherit" font-size="12" dy=".8em" y="1372.5800018310547" x="234.5">[^...]&#xa0;&#xa0; &#xa0;不在方括号内的任意字符&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;</text><text id="kity_text_683" text-rendering="inherit" font-size="12" dy=".8em" y="1390.5800018310547" x="234.5">.&#xa0;&#xa0; &#xa0;除换行符和其他Unicode行终止符之外的任意字符</text><text id="kity_text_684" text-rendering="inherit" font-size="12" dy=".8em" y="1408.5800018310547" x="234.5">\w&#xa0;&#xa0; &#xa0;任何ASCII字符，等价于[a-zA-Z0-9]</text><text id="kity_text_685" text-rendering="inherit" font-size="12" dy=".8em" y="1426.5800018310547" x="234.5">\W&#xa0;&#xa0; &#xa0;任何非ASCII字符组成的，等价于[^a-zA-Z0-9]</text><text id="kity_text_686" text-rendering="inherit" font-size="12" dy=".8em" y="1444.5800018310547" x="234.5">\s&#xa0;&#xa0; &#xa0;任何Unicode空白符：空格，制表符，回车</text><text id="kity_text_687" text-rendering="inherit" font-size="12" dy=".8em" y="1462.5800018310547" x="234.5">\S&#xa0;&#xa0; &#xa0;任何非Unicode空白符的字符</text><text id="kity_text_688" text-rendering="inherit" font-size="12" dy=".8em" y="1480.5800018310547" x="234.5">\d&#xa0;&#xa0; &#xa0;任何ASCII数字，等价于 [0-9]</text><text id="kity_text_689" text-rendering="inherit" font-size="12" dy=".8em" y="1498.5800018310547" x="234.5">\D&#xa0;&#xa0; &#xa0;任何非ASCII数字之外的任意字符，等价于 [^0-9] [\b]&#xa0;&#xa0; &#xa0;退格直接量（特例）&#xa0;&#xa0; &#xa0;&#xa0;&#xa0;&#xa0; </text></g></g><g id="minder_node78"><g id="node_expander77" style="cursor: pointer;"><path id="kity_path_696" fill="white" stroke="gray" d="M814.5,1612.5A6,6,0,1,1,802.5,1612.5A6,6,0,1,1,814.5,1612.5"></path><path id="kity_path_697" fill="none" stroke="gray" d="M804,1612.5L813,1612.5"></path></g><path id="node_outline78" fill="none" stroke="none" d="M763.5,1601.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text78" fill="black"><text id="kity_text_693" text-rendering="inherit" font-size="12" dy=".8em" y="1604.5800018310547" x="768.5">重复</text></g></g><g id="minder_node79" opacity="1"><g id="node_expander78" style="cursor: pointer;" display="none"><path id="kity_path_704" fill="white" stroke="gray" d="M730.5,1612.5A6,6,0,1,1,718.5,1612.5A6,6,0,1,1,730.5,1612.5"></path><path id="kity_path_705" fill="none" stroke="gray"></path></g><path id="node_outline79" fill="none" stroke="none" d="M450.5,1547.5h263a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-263a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text79" fill="black"><text id="kity_text_701" text-rendering="inherit" font-size="12" dy=".8em" y="1550.5800018310547" x="455.5">一定要用在子表达式之后</text><text id="kity_text_706" text-rendering="inherit" font-size="12" dy=".8em" y="1568.5800018310547" x="455.5">&#xa0;&#xa0; {n,m}&#xa0;&#xa0; &#xa0;匹配前一项至少n次，但是不超过m次</text><text id="kity_text_707" text-rendering="inherit" font-size="12" dy=".8em" y="1586.5800018310547" x="455.5">	{n,}&#xa0;&#xa0; &#xa0;匹配前一项n次或者更多次</text><text id="kity_text_708" text-rendering="inherit" font-size="12" dy=".8em" y="1604.5800018310547" x="455.5">	{n}&#xa0;&#xa0; &#xa0;匹配前一项n次</text><text id="kity_text_709" text-rendering="inherit" font-size="12" dy=".8em" y="1622.5800018310547" x="455.5">	?&#xa0;&#xa0; &#xa0;匹配前一项0次或者1次，等价于{0,1}</text><text id="kity_text_710" text-rendering="inherit" font-size="12" dy=".8em" y="1640.5800018310547" x="455.5">	+&#xa0;&#xa0; &#xa0;匹配前一项1次或者多次，等价于{1,}</text><text id="kity_text_711" text-rendering="inherit" font-size="12" dy=".8em" y="1658.5800018310547" x="455.5">	*&#xa0;&#xa0; &#xa0;匹配前一项0次或者多次，等价于{0,}</text></g></g><g id="minder_node80"><g id="node_expander79" style="cursor: pointer;"><path id="kity_path_718" fill="white" stroke="gray" d="M814.5,1744.5A6,6,0,1,1,802.5,1744.5A6,6,0,1,1,814.5,1744.5"></path><path id="kity_path_719" fill="none" stroke="gray" d="M804,1744.5L813,1744.5"></path></g><path id="node_outline80" fill="none" stroke="none" d="M739.5,1733.5h58a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-58a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text80" fill="black"><text id="kity_text_715" text-rendering="inherit" font-size="12" dy=".8em" y="1736.5800018310547" x="744.5">重复方式</text></g></g><g id="minder_node81"><g id="node_expander80" style="cursor: pointer;"><path id="kity_path_726" fill="white" stroke="gray" d="M706.5,1718.5A6,6,0,1,1,694.5,1718.5A6,6,0,1,1,706.5,1718.5"></path><path id="kity_path_727" fill="none" stroke="gray" d="M696,1718.5L705,1718.5"></path></g><path id="node_outline81" fill="none" stroke="none" d="M655.5,1707.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text81" fill="black"><text id="kity_text_723" text-rendering="inherit" font-size="12" dy=".8em" y="1710.5800018310547" x="660.5">贪婪</text></g></g><g id="minder_node82"><g id="node_expander81" style="cursor: pointer;"><path id="kity_path_734" fill="white" stroke="gray" d="M706.5,1770.5A6,6,0,1,1,694.5,1770.5A6,6,0,1,1,706.5,1770.5"></path><path id="kity_path_735" fill="none" stroke="gray" d="M696,1770.5L705,1770.5"></path></g><path id="node_outline82" fill="none" stroke="none" d="M643.5,1759.5h46a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-46a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text82" fill="black"><text id="kity_text_731" text-rendering="inherit" font-size="12" dy=".8em" y="1762.5800018310547" x="648.5">非贪婪</text></g></g><g id="minder_node83"><g id="node_expander82" style="cursor: pointer;" display="none"><path id="kity_path_742" fill="white" stroke="gray" d="M622.5,1718.5A6,6,0,1,1,610.5,1718.5A6,6,0,1,1,622.5,1718.5"></path><path id="kity_path_743" fill="none" stroke="gray"></path></g><path id="node_outline83" fill="none" stroke="none" d="M415.5,1707.5h190a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-190a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text83" fill="black"><text id="kity_text_739" text-rendering="inherit" font-size="12" dy=".8em" y="1710.5800018310547" x="420.5">匹配重复字符时是尽可能多地匹配</text></g></g><g id="minder_node84"><g id="node_expander83" style="cursor: pointer;" display="none"><path id="kity_path_750" fill="white" stroke="gray" d="M610.5,1770.5A6,6,0,1,1,598.5,1770.5A6,6,0,1,1,610.5,1770.5"></path><path id="kity_path_751" fill="none" stroke="gray"></path></g><path id="node_outline84" fill="none" stroke="none" d="M391.5,1759.5h202a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-202a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text84" fill="black"><text id="kity_text_747" text-rendering="inherit" font-size="12" dy=".8em" y="1762.5800018310547" x="396.5">在待匹配的字符后跟随一个问号即可</text></g></g><g id="minder_node85"><g id="node_expander84" style="cursor: pointer;"><path id="kity_path_758" fill="white" stroke="gray" d="M814.5,1822.5A6,6,0,1,1,802.5,1822.5A6,6,0,1,1,814.5,1822.5"></path><path id="kity_path_759" fill="none" stroke="gray" d="M804,1822.5L813,1822.5"></path></g><path id="node_outline85" fill="none" stroke="none" d="M763.5,1811.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text85" fill="black"><text id="kity_text_755" text-rendering="inherit" font-size="12" dy=".8em" y="1814.5800018310547" x="768.5">选择</text></g></g><g id="minder_node86"><g id="node_expander85" style="cursor: pointer;" display="none"><path id="kity_path_766" fill="white" stroke="gray" d="M730.5,1822.5A6,6,0,1,1,718.5,1822.5A6,6,0,1,1,730.5,1822.5"></path><path id="kity_path_767" fill="none" stroke="gray"></path></g><path id="node_outline86" fill="none" stroke="none" d="M474.5,1811.5h239a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-239a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text86" fill="black"><text id="kity_text_763" text-rendering="inherit" font-size="12" dy=".8em" y="1814.5800018310547" x="479.5">/ab|cd|ef/ 可以匹配 "ab"或者"cd"或者"ef"</text></g></g><g id="minder_node87"><g id="node_expander86" style="cursor: pointer;"><path id="kity_path_774" fill="white" stroke="gray" d="M814.5,1874.5A6,6,0,1,1,802.5,1874.5A6,6,0,1,1,814.5,1874.5"></path><path id="kity_path_775" fill="none" stroke="gray" d="M804,1874.5L813,1874.5"></path></g><path id="node_outline87" fill="none" stroke="none" d="M763.5,1863.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text87" fill="black"><text id="kity_text_771" text-rendering="inherit" font-size="12" dy=".8em" y="1866.5800018310547" x="768.5">分组</text></g></g><g id="minder_node88"><g id="node_expander87" style="cursor: pointer;" display="none"><path id="kity_path_782" fill="white" stroke="gray" d="M730.5,1874.5A6,6,0,1,1,718.5,1874.5A6,6,0,1,1,730.5,1874.5"></path><path id="kity_path_783" fill="none" stroke="gray"></path></g><path id="node_outline88" fill="none" stroke="none" d="M659.5,1863.5h54a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-54a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text88" fill="black"><text id="kity_text_779" text-rendering="inherit" font-size="12" dy=".8em" y="1866.5800018310547" x="664.5">用()分隔</text></g></g><g id="minder_node89"><g id="node_expander88" style="cursor: pointer;"><path id="kity_path_790" fill="white" stroke="gray" d="M814.5,1971.5A6,6,0,1,1,802.5,1971.5A6,6,0,1,1,814.5,1971.5"></path><path id="kity_path_791" fill="none" stroke="gray" d="M804,1971.5L813,1971.5"></path></g><path id="node_outline89" fill="none" stroke="none" d="M715.5,1960.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text89" fill="black"><text id="kity_text_787" text-rendering="inherit" font-size="12" dy=".8em" y="1963.5800018310547" x="720.5">指定匹配位置</text></g></g><g id="minder_node90" opacity="1"><g id="node_expander89" style="cursor: pointer;" display="none"><path id="kity_path_798" fill="white" stroke="gray" d="M682.5,1971.5A6,6,0,1,1,670.5,1971.5A6,6,0,1,1,682.5,1971.5"></path><path id="kity_path_799" fill="none" stroke="gray"></path></g><path id="node_outline90" fill="none" stroke="none" d="M25.5,1915.5h640a5,5,0,0,1,5,5v102a5,5,0,0,1,-5,5h-640a5,5,0,0,1,-5,-5v-102a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text90" fill="black"><text id="kity_text_795" text-rendering="inherit" font-size="12" dy=".8em" y="1918.5800018310547" x="30.5">&#xa0;&#xa0; &#xa0;^&#xa0;&#xa0; &#xa0;匹配字符串的开头，在多行检索中，匹配一行的开头</text><text id="kity_text_800" text-rendering="inherit" font-size="12" dy=".8em" y="1936.5800018310547" x="30.5">	$&#xa0;&#xa0; &#xa0;匹配字符串的结尾，在多行检索中，匹配一行的结尾</text><text id="kity_text_801" text-rendering="inherit" font-size="12" dy=".8em" y="1954.5800018310547" x="30.5">	\b&#xa0;&#xa0; &#xa0;匹配一个单词的边界，即位于字符\w和\W之间的位置，或者位于字符\w和字符&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;串的开头或结尾之间的位置。</text><text id="kity_text_802" text-rendering="inherit" font-size="12" dy=".8em" y="1972.5800018310547" x="30.5">	\B&#xa0;&#xa0; &#xa0;匹配非单词边界的位置</text><text id="kity_text_803" text-rendering="inherit" font-size="12" dy=".8em" y="1990.5800018310547" x="30.5">	(?=p) &#xa0;&#xa0;&#xa0; &#xa0;零宽正向先行断言，要求接下来的字符都与p匹配，但不能包括匹配p的那些字&#xa0;&#xa0; &#xa0;&#xa0;&#xa0; &#xa0;符</text><text id="kity_text_804" text-rendering="inherit" font-size="12" dy=".8em" y="2008.5800018310547" x="30.5">	(?!p) &#xa0;&#xa0;&#xa0; &#xa0;零宽负向先行断言，要求接下来的字符不与p匹配 </text></g></g><g id="kity_g_12" display="none"><path id="kity_path_13" fill="none" stroke="rgb(66, 94, 112)" d="M715.5,2080.5h82a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-82a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="5"></path></g><g id="minder_node91"><g id="node_expander90" style="cursor: pointer;"><path id="kity_path_811" fill="white" stroke="gray" d="M898.5,2185.5A6,6,0,1,1,886.5,2185.5A6,6,0,1,1,898.5,2185.5"></path><path id="kity_path_812" fill="none" stroke="gray" d="M888,2185.5L897,2185.5"></path></g><path id="node_outline91" fill="none" stroke="none" d="M801.5,2174.5h80a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-80a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text91" fill="black"><text id="kity_text_808" text-rendering="inherit" font-size="12" dy=".8em" y="2177.5800018310547" x="806.5">String的支持</text></g></g><g id="minder_node92"><g id="node_expander91" style="cursor: pointer;"><path id="kity_path_819" fill="white" stroke="gray" d="M768.5,2094.5A6,6,0,1,1,756.5,2094.5A6,6,0,1,1,768.5,2094.5"></path><path id="kity_path_820" fill="none" stroke="gray" d="M758,2094.5L767,2094.5"></path></g><path id="node_outline92" fill="none" stroke="none" d="M696.5,2083.5h55a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-55a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text92" fill="black"><text id="kity_text_816" text-rendering="inherit" font-size="12" dy=".8em" y="2086.5800018310547" x="701.5">search()</text></g></g><g id="minder_node93"><g id="node_expander92" style="cursor: pointer;" display="none"><path id="kity_path_827" fill="white" stroke="gray" d="M663.5,2068.5A6,6,0,1,1,651.5,2068.5A6,6,0,1,1,663.5,2068.5"></path><path id="kity_path_828" fill="none" stroke="gray" d="M653,2068.5L662,2068.5"></path></g><path id="node_outline93" fill="none" stroke="none" d="M149.5,2057.5h497a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-497a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text93" fill="black"><text id="kity_text_824" text-rendering="inherit" font-size="12" dy=".8em" y="2060.5800018310547" x="154.5">参数为一个正则表达式。如果参数不为正则表达式，则先通过RegExp将其转换为构造函数。</text></g></g><g id="minder_node101"><g id="node_expander100" style="cursor: pointer;" display="none"><path id="kity_path_891" fill="white" stroke="gray" d="M663.5,2120.5A6,6,0,1,1,651.5,2120.5A6,6,0,1,1,663.5,2120.5"></path><path id="kity_path_892" fill="none" stroke="gray"></path></g><path id="node_outline101" fill="none" stroke="none" d="M168.5,2109.5h478a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-478a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text101" fill="black"><text id="kity_text_888" text-rendering="inherit" font-size="12" dy=".8em" y="2112.5800018310547" x="173.5">不支持全局检索，返回第一个与之匹配的子串的位置，如果找不到匹配的子串，返回-1。</text></g></g><g id="minder_node102"><g id="node_expander101" style="cursor: pointer;"><path id="kity_path_899" fill="white" stroke="gray" d="M768.5,2172.5A6,6,0,1,1,756.5,2172.5A6,6,0,1,1,768.5,2172.5"></path><path id="kity_path_900" fill="none" stroke="gray" d="M758,2172.5L767,2172.5"></path></g><path id="node_outline102" fill="none" stroke="none" d="M691.5,2161.5h60a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-60a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text102" fill="black"><text id="kity_text_896" text-rendering="inherit" font-size="12" dy=".8em" y="2164.5800018310547" x="696.5">replace() </text></g></g><g id="minder_node103"><g id="node_expander102" style="cursor: pointer;" display="none"><path id="kity_path_907" fill="white" stroke="gray" d="M658.5,2172.5A6,6,0,1,1,646.5,2172.5A6,6,0,1,1,658.5,2172.5"></path><path id="kity_path_908" fill="none" stroke="gray"></path></g><path id="node_outline103" fill="none" stroke="none" d="M175.5,2161.5h466a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-466a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text103" fill="black"><text id="kity_text_904" text-rendering="inherit" font-size="12" dy=".8em" y="2164.5800018310547" x="180.5">用以执行检索和替换操作。第一个参数是正则表达式，第二个参数是要替换的字符串。</text></g></g><g id="minder_node104"><g id="node_expander103" style="cursor: pointer;" display="none"><path id="kity_path_915" fill="white" stroke="gray" d="M768.5,2224.5A6,6,0,1,1,756.5,2224.5A6,6,0,1,1,768.5,2224.5"></path><path id="kity_path_916" fill="none" stroke="gray"></path></g><path id="node_outline104" fill="none" stroke="none" d="M709.5,2213.5h42a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-42a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text104" fill="black"><text id="kity_text_912" text-rendering="inherit" font-size="12" dy=".8em" y="2216.5800018310547" x="714.5">split()</text></g></g><g id="minder_node105"><g id="node_expander104" style="cursor: pointer;"><path id="kity_path_923" fill="white" stroke="gray" d="M768.5,2276.5A6,6,0,1,1,756.5,2276.5A6,6,0,1,1,768.5,2276.5"></path><path id="kity_path_924" fill="none" stroke="gray" d="M758,2276.5L767,2276.5"></path></g><path id="node_outline105" fill="none" stroke="none" d="M697.5,2265.5h54a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-54a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text105" fill="black"><text id="kity_text_920" text-rendering="inherit" font-size="12" dy=".8em" y="2268.5800018310547" x="702.5">match() </text></g></g><g id="minder_node106"><g id="node_expander105" style="cursor: pointer;" display="none"><path id="kity_path_931" fill="white" stroke="gray" d="M664.5,2276.5A6,6,0,1,1,652.5,2276.5A6,6,0,1,1,664.5,2276.5"></path><path id="kity_path_932" fill="none" stroke="gray"></path></g><path id="node_outline106" fill="none" stroke="none" d="M77.5,2265.5h570a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-570a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text106" fill="black"><text id="kity_text_928" text-rendering="inherit" font-size="12" dy=".8em" y="2268.5800018310547" x="82.5">参数为正则表达式。返回由匹配结果组成的数组。当正则表达式中没有g修饰符的时候，就不是全局匹配。</text></g></g><g id="minder_node34"><g id="node_expander33" style="cursor: pointer;" display="none"><path id="kity_path_315" fill="white" stroke="gray" d="M832.5,31.5A6,6,0,1,1,820.5,31.5A6,6,0,1,1,832.5,31.5"></path><path id="kity_path_316" fill="none" stroke="gray"></path></g><path id="node_outline34" fill="none" stroke="none" d="M680.5,20.5h135a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-135a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text34" fill="black"><text id="kity_text_312" text-rendering="inherit" font-size="12" dy=".8em" y="23.580001831054688" x="685.5">var date = new Date()</text></g></g><g id="minder_node33"><g id="node_expander32" style="cursor: pointer;"><path id="kity_path_307" fill="white" stroke="gray" d="M916.5,31.5A6,6,0,1,1,904.5,31.5A6,6,0,1,1,916.5,31.5"></path><path id="kity_path_308" fill="none" stroke="gray" d="M906,31.5L915,31.5"></path></g><path id="node_outline33" fill="none" stroke="none" d="M865.5,20.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text33" fill="black"><text id="kity_text_304" text-rendering="inherit" font-size="12" dy=".8em" y="23.580001831054688" x="870.5">创建</text></g></g><g id="minder_node36"><g id="node_expander35" style="cursor: pointer;" display="none"><path id="kity_path_331" fill="white" stroke="gray" d="M832.5,83.5A6,6,0,1,1,820.5,83.5A6,6,0,1,1,832.5,83.5"></path><path id="kity_path_332" fill="none" stroke="gray"></path></g><path id="node_outline36" fill="none" stroke="none" d="M546.5,72.5h269a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-269a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text36" fill="black"><text id="kity_text_328" text-rendering="inherit" font-size="12" dy=".8em" y="75.58000183105469" x="551.5">Date.getDate()&#xa0; 返回是日期对象中月份中的几号</text></g></g><g id="minder_node37"><g id="node_expander36" style="cursor: pointer;" display="none"><path id="kity_path_340" fill="white" stroke="gray" d="M832.5,135.5A6,6,0,1,1,820.5,135.5A6,6,0,1,1,832.5,135.5"></path><path id="kity_path_341" fill="none" stroke="gray"></path></g><path id="node_outline37" fill="none" stroke="none" d="M611.5,124.5h204a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-204a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text37" fill="black"><text id="kity_text_337" text-rendering="inherit" font-size="12" dy=".8em" y="127.58000183105469" x="616.5">Date.getDay()&#xa0; 返回日期中的星期几</text></g></g><g id="minder_node38"><g id="node_expander37" style="cursor: pointer;" display="none"><path id="kity_path_348" fill="white" stroke="gray" d="M832.5,187.5A6,6,0,1,1,820.5,187.5A6,6,0,1,1,832.5,187.5"></path><path id="kity_path_349" fill="none" stroke="gray"></path></g><path id="node_outline38" fill="none" stroke="none" d="M648.5,176.5h167a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-167a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text38" fill="black"><text id="kity_text_345" text-rendering="inherit" font-size="12" dy=".8em" y="179.5800018310547" x="653.5">Date.getFulYead()&#xa0; 返回年份</text></g></g><g id="minder_node39"><g id="node_expander38" style="cursor: pointer;" display="none"><path id="kity_path_356" fill="white" stroke="gray" d="M832.5,239.5A6,6,0,1,1,820.5,239.5A6,6,0,1,1,832.5,239.5"></path><path id="kity_path_357" fill="none" stroke="gray"></path></g><path id="node_outline39" fill="none" stroke="none" d="M553.5,228.5h262a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-262a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text39" fill="black"><text id="kity_text_353" text-rendering="inherit" font-size="12" dy=".8em" y="231.5800018310547" x="558.5">Date.getHours()&#xa0;&#xa0;&#xa0; 返回日期中的小时（0-23）</text></g></g><g id="minder_node40"><g id="node_expander39" style="cursor: pointer;" display="none"><path id="kity_path_364" fill="white" stroke="gray" d="M832.5,291.5A6,6,0,1,1,820.5,291.5A6,6,0,1,1,832.5,291.5"></path><path id="kity_path_365" fill="none" stroke="gray"></path></g><path id="node_outline40" fill="none" stroke="none" d="M536.5,280.5h279a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-279a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text40" fill="black"><text id="kity_text_361" text-rendering="inherit" font-size="12" dy=".8em" y="283.5800018310547" x="541.5">Date.getMinutes()&#xa0; 返回日期中的分钟数（0-59）</text></g></g><g id="minder_node41"><g id="node_expander40" style="cursor: pointer;" display="none"><path id="kity_path_372" fill="white" stroke="gray" d="M832.5,343.5A6,6,0,1,1,820.5,343.5A6,6,0,1,1,832.5,343.5"></path><path id="kity_path_373" fill="none" stroke="gray"></path></g><path id="node_outline41" fill="none" stroke="none" d="M544.5,332.5h271a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-271a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text41" fill="black"><text id="kity_text_369" text-rendering="inherit" font-size="12" dy=".8em" y="335.5800018310547" x="549.5">Date.getMonth()&#xa0; 返回日期中的月份数（0-11）</text></g></g><g id="minder_node42"><g id="node_expander41" style="cursor: pointer;" display="none"><path id="kity_path_380" fill="white" stroke="gray" d="M832.5,395.5A6,6,0,1,1,820.5,395.5A6,6,0,1,1,832.5,395.5"></path><path id="kity_path_381" fill="none" stroke="gray"></path></g><path id="node_outline42" fill="none" stroke="none" d="M592.5,384.5h223a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-223a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text42" fill="black"><text id="kity_text_377" text-rendering="inherit" font-size="12" dy=".8em" y="387.5800018310547" x="597.5">Date.getSeconds()返回一个日期的秒数</text></g></g><g id="minder_node43"><g id="node_expander42" style="cursor: pointer;" display="none"><path id="kity_path_388" fill="white" stroke="gray" d="M832.5,447.5A6,6,0,1,1,820.5,447.5A6,6,0,1,1,832.5,447.5"></path><path id="kity_path_389" fill="none" stroke="gray"></path></g><path id="node_outline43" fill="none" stroke="none" d="M545.5,436.5h270a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-270a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text43" fill="black"><text id="kity_text_385" text-rendering="inherit" font-size="12" dy=".8em" y="439.5800018310547" x="550.5">Date.getTime()&#xa0; 将一个日期对象以毫秒形式返回</text></g></g><g id="minder_node44"><g id="node_expander43" style="cursor: pointer;" display="none"><path id="kity_path_396" fill="white" stroke="gray" d="M832.5,499.5A6,6,0,1,1,820.5,499.5A6,6,0,1,1,832.5,499.5"></path><path id="kity_path_397" fill="none" stroke="gray"></path></g><path id="node_outline44" fill="none" stroke="none" d="M529.5,488.5h286a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-286a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text44" fill="black"><text id="kity_text_393" text-rendering="inherit" font-size="12" dy=".8em" y="491.5800018310547" x="534.5">Date.getYear()&#xa0; 返回Date对象中的年份值减去1900</text></g></g><g id="minder_node45"><g id="node_expander44" style="cursor: pointer;" display="none"><path id="kity_path_404" fill="white" stroke="gray" d="M832.5,551.5A6,6,0,1,1,820.5,551.5A6,6,0,1,1,832.5,551.5"></path><path id="kity_path_405" fill="none" stroke="gray"></path></g><path id="node_outline45" fill="none" stroke="none" d="M371.5,540.5h444a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-444a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text45" fill="black"><text id="kity_text_401" text-rendering="inherit" font-size="12" dy=".8em" y="543.5800018310547" x="376.5">Date.now()&#xa0; 静态方法　　//返回1970-01-01午夜到现在的时间间隔，用毫秒表述</text></g></g><g id="minder_node46"><g id="node_expander45" style="cursor: pointer;" display="none"><path id="kity_path_412" fill="white" stroke="gray" d="M832.5,603.5A6,6,0,1,1,820.5,603.5A6,6,0,1,1,832.5,603.5"></path><path id="kity_path_413" fill="none" stroke="gray"></path></g><path id="node_outline46" fill="none" stroke="none" d="M350.5,592.5h465a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-465a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text46" fill="black"><text id="kity_text_409" text-rendering="inherit" font-size="12" dy=".8em" y="595.5800018310547" x="355.5">Date.valueOf()&#xa0; 如果是一个Date对象，将一个Date对象转为毫秒的形式，否则不显示</text></g></g><g id="minder_node47"><g id="node_expander46" style="cursor: pointer;" display="none"><path id="kity_path_420" fill="white" stroke="gray" d="M832.5,655.5A6,6,0,1,1,820.5,655.5A6,6,0,1,1,832.5,655.5"></path><path id="kity_path_421" fill="none" stroke="gray"></path></g><path id="node_outline47" fill="none" stroke="none" d="M467.5,644.5h348a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-348a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text47" fill="black"><text id="kity_text_417" text-rendering="inherit" font-size="12" dy=".8em" y="647.5800018310547" x="472.5">Date.toDateString()&#xa0; 以字符串的形式返回一个Date的日期部分</text></g></g><g id="minder_node48"><g id="node_expander47" style="cursor: pointer;" display="none"><path id="kity_path_428" fill="white" stroke="gray" d="M832.5,707.5A6,6,0,1,1,820.5,707.5A6,6,0,1,1,832.5,707.5"></path><path id="kity_path_429" fill="none" stroke="gray"></path></g><path id="node_outline48" fill="none" stroke="none" d="M445.5,696.5h370a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-370a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text48" fill="black"><text id="kity_text_425" text-rendering="inherit" font-size="12" dy=".8em" y="699.5800018310547" x="450.5">Date.toISOString()&#xa0; 将一个Date对象转换为ISO-8601格式的字符串</text></g></g><g id="minder_node49"><g id="node_expander48" style="cursor: pointer;" display="none"><path id="kity_path_436" fill="white" stroke="gray" d="M832.5,759.5A6,6,0,1,1,820.5,759.5A6,6,0,1,1,832.5,759.5"></path><path id="kity_path_437" fill="none" stroke="gray"></path></g><path id="node_outline49" fill="none" stroke="none" d="M601.5,748.5h214a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-214a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text49" fill="black"><text id="kity_text_433" text-rendering="inherit" font-size="12" dy=".8em" y="751.5800018310547" x="606.5">Date.toJSON()&#xa0; JSON序列化一个对象</text></g></g><g id="minder_node50"><g id="node_expander49" style="cursor: pointer;" display="none"><path id="kity_path_444" fill="white" stroke="gray" d="M832.5,811.5A6,6,0,1,1,820.5,811.5A6,6,0,1,1,832.5,811.5"></path><path id="kity_path_445" fill="none" stroke="gray"></path></g><path id="node_outline50" fill="none" stroke="none" d="M176.5,800.5h639a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-639a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text50" fill="black"><text id="kity_text_441" text-rendering="inherit" font-size="12" dy=".8em" y="803.5800018310547" x="181.5">Date.toLocaleDateString()&#xa0; 以本地格式的字符串返回一个Date的日期部分,返回一个本地人可读的日期格式，日期部分</text></g></g><g id="minder_node51"><g id="node_expander50" style="cursor: pointer;" display="none"><path id="kity_path_452" fill="white" stroke="gray" d="M832.5,863.5A6,6,0,1,1,820.5,863.5A6,6,0,1,1,832.5,863.5"></path><path id="kity_path_453" fill="none" stroke="gray"></path></g><path id="node_outline51" fill="none" stroke="none" d="M562.5,852.5h253a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-253a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text51" fill="black"><text id="kity_text_449" text-rendering="inherit" font-size="12" dy=".8em" y="855.5800018310547" x="567.5">Date.toString()将一个Date转换为一个字符串</text></g></g><g id="minder_node35"><g id="node_expander34" style="cursor: pointer;"><path id="kity_path_323" fill="white" stroke="gray" d="M916.5,473.5A6,6,0,1,1,904.5,473.5A6,6,0,1,1,916.5,473.5"></path><path id="kity_path_324" fill="none" stroke="gray" d="M906,473.5L915,473.5"></path></g><path id="node_outline35" fill="none" stroke="none" d="M865.5,462.5h34a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-34a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text35" fill="black"><text id="kity_text_320" text-rendering="inherit" font-size="12" dy=".8em" y="465.5800018310547" x="870.5">方法</text></g></g></g></g></svg>